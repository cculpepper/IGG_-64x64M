

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 11 16:16:53 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F87K90
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F87K90 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _PR4	set	3844
    53  0000                     _T4CONbits	set	3843
    54  0000                     _SPBRGH2	set	3871
    55  0000                     _SPBRG2	set	3870
    56  0000                     _BAUDCON2bits	set	3872
    57  0000                     _TXSTA2bits	set	3873
    58  0000                     _RCSTA2bits	set	3874
    59  0000                     _ANCON2bits	set	3875
    60  0000                     _ANCON2	set	3875
    61  0000                     _ANCON1	set	3876
    62  0000                     _ANCON0	set	3877
    63  0000                     _RCREG2	set	3869
    64  0000                     _INTCONbits	set	4082
    65  0000                     _PIE5bits	set	4025
    66  0000                     _TRISGbits	set	3992
    67  0000                     _TRISJ	set	3994
    68  0000                     _TRISH	set	3993
    69  0000                     _TRISE	set	3990
    70  0000                     _TRISA	set	3986
    71  0000                     _TRISFbits	set	3991
    72  0000                     _WDTCONbits	set	4049
    73  0000                     _OSCTUNEbits	set	3995
    74  0000                     _OSCCONbits	set	4051
    75  0000                     _PORTA	set	3968
    76  0000                     _PORTJ	set	3976
    77  0000                     _PORTE	set	3972
    78  0000                     _PORTH	set	3975
    79  0000                     _PIR3bits	set	4004
    80  0000                     _PORTFbits	set	3973
    81  0000                     _PIR5bits	set	4026
    82                           
    83                           ; #config settings
    84  0000                     
    85                           	psect	cinit
    86  000402                     __pcinit:
    87                           	opt stack 0
    88  000402                     start_initialization:
    89                           	opt stack 0
    90  000402                     __initialization:
    91                           	opt stack 0
    92                           
    93                           ; Clear objects allocated to BIGRAM (1024 bytes)
    94  000402  EE0A  F0F4         	lfsr	0,__pbssBIGRAM
    95  000406  EE14 F000          	lfsr	1,1024
    96  00040A                     clear_0:
    97  00040A  6AEE               	clrf	postinc0,c
    98  00040C  50E5               	movf	postdec1,w,c
    99  00040E  50E1               	movf	fsr1l,w,c
   100  000410  E1FC               	bnz	clear_0
   101  000412  50E2               	movf	fsr1h,w,c
   102  000414  E1FA               	bnz	clear_0
   103                           
   104                           ; Clear objects allocated to COMRAM (10 bytes)
   105  000416  EE00  F022         	lfsr	0,__pbssCOMRAM
   106  00041A  0E0A               	movlw	10
   107  00041C                     clear_1:
   108  00041C  6AEE               	clrf	postinc0,c
   109  00041E  06E8               	decf	wreg,f,c
   110  000420  E1FD               	bnz	clear_1
   111  000422                     end_of_initialization:
   112                           	opt stack 0
   113  000422                     __end_of__initialization:
   114                           	opt stack 0
   115  000422  902C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   116  000424  922C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   117  000426  0100               	movlb	0
   118  000428  EFCC  F001         	goto	_main	;jump to C main() function
   119                           postinc0	equ	0xFEE
   120                           wreg	equ	0xFE8
   121                           postdec1	equ	0xFE5
   122                           fsr1h	equ	0xFE2
   123                           fsr1l	equ	0xFE1
   124                           
   125                           	psect	bssCOMRAM
   126  000022                     __pbssCOMRAM:
   127                           	opt stack 0
   128  000022                     _screen_write_pointer:
   129                           	opt stack 0
   130  000022                     	ds	2
   131  000024                     _screen_read_pointer:
   132                           	opt stack 0
   133  000024                     	ds	2
   134  000026                     _page_counter:
   135                           	opt stack 0
   136  000026                     	ds	1
   137  000027                     _read_screen:
   138                           	opt stack 0
   139  000027                     	ds	1
   140  000028                     _write_screen:
   141                           	opt stack 0
   142  000028                     	ds	1
   143  000029                     _status:
   144                           	opt stack 0
   145  000029                     	ds	1
   146  00002A                     _received_byte:
   147                           	opt stack 0
   148  00002A                     	ds	1
   149  00002B                     _column_counter:
   150                           	opt stack 0
   151  00002B                     	ds	1
   152                           postinc0	equ	0xFEE
   153                           wreg	equ	0xFE8
   154                           postdec1	equ	0xFE5
   155                           fsr1h	equ	0xFE2
   156                           fsr1l	equ	0xFE1
   157                           
   158                           	psect	bssBIGRAM
   159  000AF4                     __pbssBIGRAM:
   160                           	opt stack 0
   161  000AF4                     _screen_mem_2:
   162                           	opt stack 0
   163  000AF4                     	ds	512
   164  000CF4                     _screen_mem_1:
   165                           	opt stack 0
   166  000CF4                     	ds	512
   167                           postinc0	equ	0xFEE
   168                           wreg	equ	0xFE8
   169                           postdec1	equ	0xFE5
   170                           fsr1h	equ	0xFE2
   171                           fsr1l	equ	0xFE1
   172                           
   173                           	psect	cstackCOMRAM
   174  000001                     __pcstackCOMRAM:
   175                           	opt stack 0
   176  000001                     ??_screen_scan:
   177  000001                     
   178                           ; 1 bytes @ 0x0
   179  000001                     	ds	2
   180  000003                     ??_isr:
   181                           
   182                           ; 1 bytes @ 0x2
   183  000003                     	ds	18
   184  000015                     ?___awdiv:
   185                           	opt stack 0
   186  000015                     ___awdiv@dividend:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x14
   190  000015                     	ds	2
   191  000017                     ___awdiv@divisor:
   192                           	opt stack 0
   193                           
   194                           ; 2 bytes @ 0x16
   195  000017                     	ds	2
   196  000019                     ___awdiv@counter:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0x18
   200  000019                     	ds	1
   201  00001A                     ___awdiv@sign:
   202                           	opt stack 0
   203                           
   204                           ; 1 bytes @ 0x19
   205  00001A                     	ds	1
   206  00001B                     ___awdiv@quotient:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x1A
   210  00001B                     	ds	2
   211  00001D                     ??_init:
   212                           
   213                           ; 1 bytes @ 0x1C
   214  00001D                     	ds	1
   215  00001E                     init@i:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x1D
   219  00001E                     	ds	2
   220  000020                     ??_main:
   221                           
   222                           ; 1 bytes @ 0x1F
   223  000020                     	ds	2
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           postdec1	equ	0xFE5
   227                           fsr1h	equ	0xFE2
   228                           fsr1l	equ	0xFE1
   229                           
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 116 in file "main.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   253 ;;Total ram usage:        2 bytes
   254 ;; Hardware stack levels required when called:    4
   255 ;; This function calls:
   256 ;;		_init
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text0
   263  000398                     __ptext0:
   264                           	opt stack 0
   265  000398                     _main:
   266                           	opt stack 27
   267                           
   268                           ;main.c: 117: init();
   269                           
   270                           ;incstack = 0
   271  000398  EC34  F001         	call	_init	;wreg free
   272                           
   273                           ;main.c: 119: PORTFbits.RF7 = 1;
   274  00039C  8E85               	bsf	3973,7,c	;volatile
   275                           
   276                           ;main.c: 120: _delay((unsigned long)((1000)*((64000000UL)/4000.0)));
   277  00039E  0E52               	movlw	82
   278  0003A0  6E21               	movwf	(??_main+1)& (0+255),c
   279  0003A2  0E2B               	movlw	43
   280  0003A4  6E20               	movwf	??_main& (0+255),c
   281  0003A6  0E00               	movlw	0
   282  0003A8                     u317:
   283  0003A8  2EE8               	decfsz	wreg,f,c
   284  0003AA  D7FE               	bra	u317
   285  0003AC  2E20               	decfsz	??_main& (0+255),f,c
   286  0003AE  D7FC               	bra	u317
   287  0003B0  2E21               	decfsz	(??_main+1)& (0+255),f,c
   288  0003B2  D7FA               	bra	u317
   289  0003B4  D000               	nop2	
   290                           
   291                           ;main.c: 121: PORTFbits.RF7 = 0;
   292  0003B6  9E85               	bcf	3973,7,c	;volatile
   293  0003B8                     
   294                           ;main.c: 124: if (PIR3bits.RC2IF) {
   295  0003B8  AAA4               	btfss	4004,5,c	;volatile
   296  0003BA  D7FE               	goto	l97
   297                           
   298                           ;main.c: 125: received_byte = RCREG2;
   299  0003BC  CF1D F02A          	movff	3869,_received_byte	;volatile
   300                           
   301                           ;main.c: 126: PIR3bits.RC2IF = 0;
   302  0003C0  9AA4               	bcf	4004,5,c	;volatile
   303                           
   304                           ;main.c: 128: screen_mem_1[screen_write_pointer] = received_byte;
   305  0003C2  0EF4               	movlw	low _screen_mem_1
   306  0003C4  2422               	addwf	_screen_write_pointer,w,c
   307  0003C6  6ED9               	movwf	fsr2l,c
   308  0003C8  0E0C               	movlw	high _screen_mem_1
   309  0003CA  2023               	addwfc	_screen_write_pointer+1,w,c
   310  0003CC  6EDA               	movwf	fsr2h,c
   311  0003CE  C02A  FFDF         	movff	_received_byte,indf2
   312                           
   313                           ;main.c: 130: screen_write_pointer++;
   314  0003D2  4A22               	infsnz	_screen_write_pointer,f,c
   315  0003D4  2A23               	incf	_screen_write_pointer+1,f,c
   316                           
   317                           ;main.c: 131: if (screen_write_pointer > 511) screen_write_pointer = 0;
   318  0003D6  0E02               	movlw	2
   319  0003D8  5C23               	subwf	_screen_write_pointer+1,w,c
   320  0003DA  A0D8               	btfss	status,0,c
   321  0003DC  D004               	goto	l99
   322  0003DE  0E00               	movlw	0
   323  0003E0  6E23               	movwf	_screen_write_pointer+1,c
   324  0003E2  0E00               	movlw	0
   325  0003E4  6E22               	movwf	_screen_write_pointer,c
   326  0003E6                     l99:
   327                           
   328                           ;main.c: 133: PORTFbits.RF7 = !PORTFbits.RF7;
   329  0003E6  BE85               	btfsc	3973,7,c	;volatile
   330  0003E8  D003               	goto	u290
   331  0003EA  6A20               	clrf	??_main& (0+255),c
   332  0003EC  2A20               	incf	??_main& (0+255),f,c
   333  0003EE  D001               	goto	u308
   334  0003F0                     u290:
   335  0003F0  6A20               	clrf	??_main& (0+255),c
   336  0003F2                     u308:
   337  0003F2  3220               	rrcf	??_main,f,c
   338  0003F4  3220               	rrcf	??_main,f,c
   339  0003F6  5085               	movf	3973,w,c	;volatile
   340  0003F8  1820               	xorwf	??_main,w,c
   341  0003FA  0B7F               	andlw	-129
   342  0003FC  1820               	xorwf	??_main,w,c
   343  0003FE  6E85               	movwf	3973,c	;volatile
   344  000400  D7DB               	goto	l97
   345  000402                     __end_of_main:
   346                           	opt stack 0
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           postdec1	equ	0xFE5
   350                           fsr1h	equ	0xFE2
   351                           fsr1l	equ	0xFE1
   352                           indf2	equ	0xFDF
   353                           fsr2h	equ	0xFDA
   354                           fsr2l	equ	0xFD9
   355                           status	equ	0xFD8
   356                           
   357 ;; *************** function _init *****************
   358 ;; Defined at:
   359 ;;		line 196 in file "main.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;  i               2   29[COMRAM] int 
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   374 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   376 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   377 ;;Total ram usage:        3 bytes
   378 ;; Hardware stack levels used:    1
   379 ;; Hardware stack levels required when called:    3
   380 ;; This function calls:
   381 ;;		___awdiv
   382 ;; This function is called by:
   383 ;;		_main
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           	psect	text1
   388  000268                     __ptext1:
   389                           	opt stack 0
   390  000268                     _init:
   391                           	opt stack 27
   392                           
   393                           ;main.c: 198: OSCCONbits.IRCF = 0b111;
   394                           
   395                           ;incstack = 0
   396  000268  88D3               	bsf	4051,4,c	;volatile
   397  00026A  8AD3               	bsf	4051,5,c	;volatile
   398  00026C  8CD3               	bsf	4051,6,c	;volatile
   399                           
   400                           ;main.c: 199: OSCTUNEbits.PLLEN = 1;
   401  00026E  8C9B               	bsf	3995,6,c	;volatile
   402                           
   403                           ;main.c: 202: WDTCONbits.SWDTEN = 0;
   404  000270  90D1               	bcf	4049,0,c	;volatile
   405                           
   406                           ;main.c: 205: ANCON0 = 0x00;
   407  000272  0E00               	movlw	0
   408  000274  010F               	movlb	15	; () banked
   409  000276  6F25               	movwf	37,b	;volatile
   410                           
   411                           ;main.c: 206: ANCON1 = 0x00;
   412  000278  0E00               	movlw	0
   413  00027A  6F24               	movwf	36,b	;volatile
   414                           
   415                           ;main.c: 207: ANCON2 = 0x00;
   416  00027C  0E00               	movlw	0
   417  00027E  6F23               	movwf	35,b	;volatile
   418                           
   419                           ; BSR set to: 15
   420                           ;main.c: 209: TRISFbits.TRISF7 = 0;
   421  000280  9E97               	bcf	3991,7,c	;volatile
   422                           
   423                           ;main.c: 211: TRISA = 0x00;
   424  000282  0E00               	movlw	0
   425  000284  6E92               	movwf	3986,c	;volatile
   426                           
   427                           ;main.c: 212: TRISE = 0x00;
   428  000286  0E00               	movlw	0
   429  000288  6E96               	movwf	3990,c	;volatile
   430                           
   431                           ;main.c: 213: TRISH = 0x00;
   432  00028A  0E00               	movlw	0
   433  00028C  6E99               	movwf	3993,c	;volatile
   434                           
   435                           ;main.c: 214: TRISJ = 0x00;
   436  00028E  0E00               	movlw	0
   437  000290  6E9A               	movwf	3994,c	;volatile
   438                           
   439                           ; BSR set to: 15
   440                           ;main.c: 217: ANCON2bits.ANSEL18 = 0;
   441  000292  9523               	bcf	35,2,b	;volatile
   442                           
   443                           ; BSR set to: 15
   444                           ;main.c: 218: ANCON2bits.ANSEL19 = 0;
   445  000294  9723               	bcf	35,3,b	;volatile
   446                           
   447                           ; BSR set to: 15
   448                           ;main.c: 219: TRISGbits.TRISG2 = 1;
   449  000296  8498               	bsf	3992,2,c	;volatile
   450                           
   451                           ; BSR set to: 15
   452                           ;main.c: 220: TRISGbits.TRISG1 = 0;
   453  000298  9298               	bcf	3992,1,c	;volatile
   454                           
   455                           ; BSR set to: 15
   456                           ;main.c: 221: RCSTA2bits.SPEN2 = 1;
   457  00029A  8F22               	bsf	34,7,b	;volatile
   458                           
   459                           ; BSR set to: 15
   460                           ;main.c: 222: RCSTA2bits.CREN2 = 1;
   461  00029C  8922               	bsf	34,4,b	;volatile
   462                           
   463                           ; BSR set to: 15
   464                           ;main.c: 223: TXSTA2bits.BRGH2 = 1;
   465  00029E  8521               	bsf	33,2,b	;volatile
   466                           
   467                           ; BSR set to: 15
   468                           ;main.c: 224: BAUDCON2bits.BRG162 = 1;
   469  0002A0  8720               	bsf	32,3,b	;volatile
   470                           
   471                           ;main.c: 225: SPBRG2 = 0x8A;
   472  0002A2  0E8A               	movlw	138
   473  0002A4  6F1E               	movwf	30,b	;volatile
   474                           
   475                           ;main.c: 226: SPBRGH2 = 0x00;
   476  0002A6  0E00               	movlw	0
   477  0002A8  6F1F               	movwf	31,b	;volatile
   478                           
   479                           ; BSR set to: 15
   480                           ;main.c: 227: PIR3bits.RC2IF = 0;
   481  0002AA  9AA4               	bcf	4004,5,c	;volatile
   482                           
   483                           ;main.c: 230: T4CONbits.T4CKPS = 0b11;
   484  0002AC  0E03               	movlw	3
   485  0002AE  1303               	iorwf	3,f,b	;volatile
   486                           
   487                           ;main.c: 231: PR4 = 254;
   488  0002B0  0EFE               	movlw	254
   489  0002B2  6F04               	movwf	4,b	;volatile
   490                           
   491                           ; BSR set to: 15
   492                           ;main.c: 232: T4CONbits.TMR4ON = 1;
   493  0002B4  8503               	bsf	3,2,b	;volatile
   494                           
   495                           ; BSR set to: 15
   496                           ;main.c: 233: PIR5bits.TMR4IF = 0;
   497  0002B6  90BA               	bcf	4026,0,c	;volatile
   498                           
   499                           ; BSR set to: 15
   500                           ;main.c: 234: PIE5bits.TMR4IE = 1;
   501  0002B8  80B9               	bsf	4025,0,c	;volatile
   502                           
   503                           ; BSR set to: 15
   504                           ;main.c: 237: INTCONbits.PEIE = 1;
   505  0002BA  8CF2               	bsf	intcon,6,c	;volatile
   506                           
   507                           ; BSR set to: 15
   508                           ;main.c: 238: INTCONbits.GIE = 1;
   509  0002BC  8EF2               	bsf	intcon,7,c	;volatile
   510                           
   511                           ;main.c: 240: int i;
   512                           ;main.c: 241: for (i = 0; i < 512; i++) {
   513  0002BE  0E00               	movlw	0
   514  0002C0  6E1F               	movwf	init@i+1,c
   515  0002C2  0E00               	movlw	0
   516  0002C4  6E1E               	movwf	init@i,c
   517  0002C6                     l1009:
   518                           
   519                           ; BSR set to: 15
   520  0002C6  BE1F               	btfsc	init@i+1,7,c
   521  0002C8  D004               	goto	l109
   522  0002CA  0E02               	movlw	2
   523  0002CC  5C1F               	subwf	init@i+1,w,c
   524  0002CE  B0D8               	btfsc	status,0,c
   525  0002D0  0012               	return	
   526  0002D2                     l109:
   527                           
   528                           ;main.c: 242: screen_mem_1[i] = 0x55 << (((i/8)+1)%2);
   529                           
   530                           ; BSR set to: 15
   531  0002D2  0EF4               	movlw	low _screen_mem_1
   532  0002D4  241E               	addwf	init@i,w,c
   533  0002D6  6ED9               	movwf	fsr2l,c
   534  0002D8  0E0C               	movlw	high _screen_mem_1
   535  0002DA  201F               	addwfc	init@i+1,w,c
   536  0002DC  6EDA               	movwf	fsr2h,c
   537  0002DE  C01E  F015         	movff	init@i,___awdiv@dividend
   538  0002E2  C01F  F016         	movff	init@i+1,___awdiv@dividend+1
   539  0002E6  0E00               	movlw	0
   540  0002E8  6E18               	movwf	___awdiv@divisor+1,c
   541  0002EA  0E08               	movlw	8
   542  0002EC  6E17               	movwf	___awdiv@divisor,c
   543  0002EE  EC8A  F001         	call	___awdiv	;wreg free
   544  0002F2  0E01               	movlw	1
   545  0002F4  2615               	addwf	?___awdiv,f,c
   546  0002F6  0E01               	movlw	1
   547  0002F8  1615               	andwf	?___awdiv,f,c
   548  0002FA  0E55               	movlw	85
   549  0002FC  6E1D               	movwf	??_init& (0+255),c
   550  0002FE  2A15               	incf	?___awdiv,f,c
   551  000300  D002               	goto	u254
   552  000302                     u255:
   553  000302  90D8               	bcf	status,0,c
   554  000304  361D               	rlcf	??_init,f,c
   555  000306                     u254:
   556  000306  2E15               	decfsz	?___awdiv,f,c
   557  000308  D7FC               	goto	u255
   558  00030A  501D               	movf	??_init,w,c
   559  00030C  6EDF               	movwf	indf2,c
   560  00030E  4A1E               	infsnz	init@i,f,c
   561  000310  2A1F               	incf	init@i+1,f,c
   562  000312  D7D9               	goto	l1009
   563  000314                     __end_of_init:
   564                           	opt stack 0
   565                           intcon	equ	0xFF2
   566                           postinc0	equ	0xFEE
   567                           wreg	equ	0xFE8
   568                           postdec1	equ	0xFE5
   569                           fsr1h	equ	0xFE2
   570                           fsr1l	equ	0xFE1
   571                           indf2	equ	0xFDF
   572                           fsr2h	equ	0xFDA
   573                           fsr2l	equ	0xFD9
   574                           status	equ	0xFD8
   575                           
   576 ;; *************** function ___awdiv *****************
   577 ;; Defined at:
   578 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;  dividend        2   20[COMRAM] int 
   581 ;;  divisor         2   22[COMRAM] int 
   582 ;; Auto vars:     Size  Location     Type
   583 ;;  quotient        2   26[COMRAM] int 
   584 ;;  sign            1   25[COMRAM] unsigned char 
   585 ;;  counter         1   24[COMRAM] unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  2   20[COMRAM] int 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   595 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   596 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   598 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   599 ;;Total ram usage:        8 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    2
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		_init
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text2
   610  000314                     __ptext2:
   611                           	opt stack 0
   612  000314                     ___awdiv:
   613                           	opt stack 27
   614                           
   615                           ;incstack = 0
   616  000314  0E00               	movlw	0
   617  000316  6E1A               	movwf	___awdiv@sign,c
   618  000318  AE18               	btfss	___awdiv@divisor+1,7,c
   619  00031A  D006               	goto	l279
   620  00031C  6C17               	negf	___awdiv@divisor,c
   621  00031E  1E18               	comf	___awdiv@divisor+1,f,c
   622  000320  B0D8               	btfsc	status,0,c
   623  000322  2A18               	incf	___awdiv@divisor+1,f,c
   624  000324  0E01               	movlw	1
   625  000326  6E1A               	movwf	___awdiv@sign,c
   626  000328                     l279:
   627  000328  AE16               	btfss	___awdiv@dividend+1,7,c
   628  00032A  D006               	goto	l280
   629  00032C  6C15               	negf	___awdiv@dividend,c
   630  00032E  1E16               	comf	___awdiv@dividend+1,f,c
   631  000330  B0D8               	btfsc	status,0,c
   632  000332  2A16               	incf	___awdiv@dividend+1,f,c
   633  000334  0E01               	movlw	1
   634  000336  1A1A               	xorwf	___awdiv@sign,f,c
   635  000338                     l280:
   636  000338  0E00               	movlw	0
   637  00033A  6E1C               	movwf	___awdiv@quotient+1,c
   638  00033C  0E00               	movlw	0
   639  00033E  6E1B               	movwf	___awdiv@quotient,c
   640  000340  5017               	movf	___awdiv@divisor,w,c
   641  000342  1018               	iorwf	___awdiv@divisor+1,w,c
   642  000344  B4D8               	btfsc	status,2,c
   643  000346  D01C               	goto	l287
   644  000348  0E01               	movlw	1
   645  00034A  6E19               	movwf	___awdiv@counter,c
   646  00034C  D004               	goto	l282
   647  00034E  90D8               	bcf	status,0,c
   648  000350  3617               	rlcf	___awdiv@divisor,f,c
   649  000352  3618               	rlcf	___awdiv@divisor+1,f,c
   650  000354  2A19               	incf	___awdiv@counter,f,c
   651  000356                     l282:
   652  000356  AE18               	btfss	___awdiv@divisor+1,7,c
   653  000358  D7FA               	goto	l283
   654  00035A                     u210:
   655  00035A  90D8               	bcf	status,0,c
   656  00035C  361B               	rlcf	___awdiv@quotient,f,c
   657  00035E  361C               	rlcf	___awdiv@quotient+1,f,c
   658  000360  5017               	movf	___awdiv@divisor,w,c
   659  000362  5C15               	subwf	___awdiv@dividend,w,c
   660  000364  5018               	movf	___awdiv@divisor+1,w,c
   661  000366  5816               	subwfb	___awdiv@dividend+1,w,c
   662  000368  A0D8               	btfss	status,0,c
   663  00036A  D005               	goto	l286
   664  00036C  5017               	movf	___awdiv@divisor,w,c
   665  00036E  5E15               	subwf	___awdiv@dividend,f,c
   666  000370  5018               	movf	___awdiv@divisor+1,w,c
   667  000372  5A16               	subwfb	___awdiv@dividend+1,f,c
   668  000374  801B               	bsf	___awdiv@quotient,0,c
   669  000376                     l286:
   670  000376  90D8               	bcf	status,0,c
   671  000378  3218               	rrcf	___awdiv@divisor+1,f,c
   672  00037A  3217               	rrcf	___awdiv@divisor,f,c
   673  00037C  2E19               	decfsz	___awdiv@counter,f,c
   674  00037E  D7ED               	goto	u210
   675  000380                     l287:
   676  000380  501A               	movf	___awdiv@sign,w,c
   677  000382  B4D8               	btfsc	status,2,c
   678  000384  D004               	goto	l288
   679  000386  6C1B               	negf	___awdiv@quotient,c
   680  000388  1E1C               	comf	___awdiv@quotient+1,f,c
   681  00038A  B0D8               	btfsc	status,0,c
   682  00038C  2A1C               	incf	___awdiv@quotient+1,f,c
   683  00038E                     l288:
   684  00038E  C01B  F015         	movff	___awdiv@quotient,?___awdiv
   685  000392  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
   686  000396  0012               	return	
   687  000398                     __end_of___awdiv:
   688                           	opt stack 0
   689                           intcon	equ	0xFF2
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           postdec1	equ	0xFE5
   693                           fsr1h	equ	0xFE2
   694                           fsr1l	equ	0xFE1
   695                           indf2	equ	0xFDF
   696                           fsr2h	equ	0xFDA
   697                           fsr2l	equ	0xFD9
   698                           status	equ	0xFD8
   699                           
   700 ;; *************** function _isr *****************
   701 ;; Defined at:
   702 ;;		line 109 in file "main.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;		None
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   718 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   719 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   720 ;;Total ram usage:       18 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    1
   723 ;; This function calls:
   724 ;;		_screen_scan
   725 ;; This function is called by:
   726 ;;		Interrupt level 2
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	intcode
   731  000008                     __pintcode:
   732                           	opt stack 0
   733  000008                     _isr:
   734                           	opt stack 27
   735                           
   736                           ;incstack = 0
   737  000008  822C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   738  00000A  CFFA F003          	movff	pclath,??_isr
   739  00000E  CFFB F004          	movff	pclatu,??_isr+1
   740  000012  CFE9 F005          	movff	fsr0l,??_isr+2
   741  000016  CFEA F006          	movff	fsr0h,??_isr+3
   742  00001A  CFE1 F007          	movff	fsr1l,??_isr+4
   743  00001E  CFE2 F008          	movff	fsr1h,??_isr+5
   744  000022  CFD9 F009          	movff	fsr2l,??_isr+6
   745  000026  CFDA F00A          	movff	fsr2h,??_isr+7
   746  00002A  CFF3 F00B          	movff	prodl,??_isr+8
   747  00002E  CFF4 F00C          	movff	prodh,??_isr+9
   748  000032  CFF6 F00D          	movff	tblptrl,??_isr+10
   749  000036  CFF7 F00E          	movff	tblptrh,??_isr+11
   750  00003A  CFF8 F00F          	movff	tblptru,??_isr+12
   751  00003E  CFF5 F010          	movff	tablat,??_isr+13
   752  000042  C02C  F011         	movff	btemp,??_isr+14
   753  000046  C02D  F012         	movff	btemp+1,??_isr+15
   754  00004A  C02E  F013         	movff	btemp+2,??_isr+16
   755  00004E  C02F  F014         	movff	btemp+3,??_isr+17
   756                           
   757                           ;main.c: 110: if (PIR5bits.TMR4IF) {
   758  000052  A0BA               	btfss	4026,0,c	;volatile
   759  000054  D003               	goto	i2l91
   760                           
   761                           ;main.c: 111: PIR5bits.TMR4IF = 0;
   762  000056  90BA               	bcf	4026,0,c	;volatile
   763                           
   764                           ;main.c: 112: screen_scan();
   765  000058  EC56  F000         	call	_screen_scan	;wreg free
   766  00005C                     i2l91:
   767  00005C  C014  F02F         	movff	??_isr+17,btemp+3
   768  000060  C013  F02E         	movff	??_isr+16,btemp+2
   769  000064  C012  F02D         	movff	??_isr+15,btemp+1
   770  000068  C011  F02C         	movff	??_isr+14,btemp
   771  00006C  C010  FFF5         	movff	??_isr+13,tablat
   772  000070  C00F  FFF8         	movff	??_isr+12,tblptru
   773  000074  C00E  FFF7         	movff	??_isr+11,tblptrh
   774  000078  C00D  FFF6         	movff	??_isr+10,tblptrl
   775  00007C  C00C  FFF4         	movff	??_isr+9,prodh
   776  000080  C00B  FFF3         	movff	??_isr+8,prodl
   777  000084  C00A  FFDA         	movff	??_isr+7,fsr2h
   778  000088  C009  FFD9         	movff	??_isr+6,fsr2l
   779  00008C  C008  FFE2         	movff	??_isr+5,fsr1h
   780  000090  C007  FFE1         	movff	??_isr+4,fsr1l
   781  000094  C006  FFEA         	movff	??_isr+3,fsr0h
   782  000098  C005  FFE9         	movff	??_isr+2,fsr0l
   783  00009C  C004  FFFB         	movff	??_isr+1,pclatu
   784  0000A0  C003  FFFA         	movff	??_isr,pclath
   785  0000A4  922C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   786  0000A6  0011               	retfie		f
   787  0000A8                     __end_of_isr:
   788                           	opt stack 0
   789                           pclatu	equ	0xFFB
   790                           pclath	equ	0xFFA
   791                           tblptru	equ	0xFF8
   792                           tblptrh	equ	0xFF7
   793                           tblptrl	equ	0xFF6
   794                           tablat	equ	0xFF5
   795                           prodh	equ	0xFF4
   796                           prodl	equ	0xFF3
   797                           intcon	equ	0xFF2
   798                           postinc0	equ	0xFEE
   799                           fsr0h	equ	0xFEA
   800                           fsr0l	equ	0xFE9
   801                           wreg	equ	0xFE8
   802                           postdec1	equ	0xFE5
   803                           fsr1h	equ	0xFE2
   804                           fsr1l	equ	0xFE1
   805                           indf2	equ	0xFDF
   806                           fsr2h	equ	0xFDA
   807                           fsr2l	equ	0xFD9
   808                           status	equ	0xFD8
   809                           
   810 ;; *************** function _screen_scan *****************
   811 ;; Defined at:
   812 ;;		line 138 in file "main.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   830 ;;Total ram usage:        2 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_isr
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text4
   840  0000AC                     __ptext4:
   841                           	opt stack 0
   842  0000AC                     _screen_scan:
   843                           	opt stack 27
   844                           
   845                           ;main.c: 140: screen_read_pointer = (column_counter*8);
   846                           
   847                           ;incstack = 0
   848  0000AC  502B               	movf	_column_counter,w,c
   849  0000AE  0D08               	mullw	8
   850  0000B0  CFF3 F024          	movff	prodl,_screen_read_pointer
   851  0000B4  CFF4 F025          	movff	prodh,_screen_read_pointer+1
   852                           
   853                           ;main.c: 142: PORTH = 0xFF;
   854  0000B8  6887               	setf	3975,c	;volatile
   855                           
   856                           ;main.c: 143: PORTE = 0b1 << (column_counter%8);
   857  0000BA  C02B  F001         	movff	_column_counter,??_screen_scan
   858  0000BE  0E07               	movlw	7
   859  0000C0  1601               	andwf	??_screen_scan,f,c
   860  0000C2  0E01               	movlw	1
   861  0000C4  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   862  0000C6  2A01               	incf	??_screen_scan,f,c
   863  0000C8  D002               	goto	i2u7_44
   864  0000CA                     i2u7_45:
   865  0000CA  90D8               	bcf	status,0,c
   866  0000CC  3602               	rlcf	??_screen_scan+1,f,c
   867  0000CE                     i2u7_44:
   868  0000CE  2E01               	decfsz	??_screen_scan,f,c
   869  0000D0  D7FC               	goto	i2u7_45
   870  0000D2  5002               	movf	??_screen_scan+1,w,c
   871  0000D4  6E84               	movwf	3972,c	;volatile
   872                           
   873                           ;main.c: 144: _delay((unsigned long)((10)*((64000000UL)/4000000.0)));
   874  0000D6  0E35               	movlw	53
   875  0000D8                     i2u32_47:
   876  0000D8  2EE8               	decfsz	wreg,f,c
   877  0000DA  D7FE               	bra	i2u32_47
   878  0000DC  F000               	nop	
   879                           
   880                           ;main.c: 146: PORTH = ~(0b1 << (column_counter>>3));
   881  0000DE  C02B  F001         	movff	_column_counter,??_screen_scan
   882  0000E2  90D8               	bcf	status,0,c
   883  0000E4  3201               	rrcf	??_screen_scan,f,c
   884  0000E6  90D8               	bcf	status,0,c
   885  0000E8  3201               	rrcf	??_screen_scan,f,c
   886  0000EA  90D8               	bcf	status,0,c
   887  0000EC  3201               	rrcf	??_screen_scan,f,c
   888  0000EE  0E01               	movlw	1
   889  0000F0  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   890  0000F2  2A01               	incf	??_screen_scan,f,c
   891  0000F4  D002               	goto	i2u8_44
   892  0000F6                     i2u8_45:
   893  0000F6  90D8               	bcf	status,0,c
   894  0000F8  3602               	rlcf	??_screen_scan+1,f,c
   895  0000FA                     i2u8_44:
   896  0000FA  2E01               	decfsz	??_screen_scan,f,c
   897  0000FC  D7FC               	goto	i2u8_45
   898  0000FE  5002               	movf	??_screen_scan+1,w,c
   899  000100  0AFF               	xorlw	255
   900  000102  6E87               	movwf	3975,c	;volatile
   901                           
   902                           ;main.c: 148: PORTJ = 0b11111110;
   903  000104  0EFE               	movlw	254
   904  000106  6E88               	movwf	3976,c	;volatile
   905                           
   906                           ;main.c: 149: PORTA = screen_mem_1[screen_read_pointer+0];
   907  000108  0EF4               	movlw	low _screen_mem_1
   908  00010A  2424               	addwf	_screen_read_pointer,w,c
   909  00010C  6ED9               	movwf	fsr2l,c
   910  00010E  0E0C               	movlw	high _screen_mem_1
   911  000110  2025               	addwfc	_screen_read_pointer+1,w,c
   912  000112  6EDA               	movwf	fsr2h,c
   913  000114  50DF               	movf	indf2,w,c
   914  000116  6E80               	movwf	3968,c	;volatile
   915                           
   916                           ;main.c: 150: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
   917  000118  0E2A               	movlw	42
   918  00011A                     i2u33_47:
   919  00011A  2EE8               	decfsz	wreg,f,c
   920  00011C  D7FE               	bra	i2u33_47
   921  00011E  D000               	nop2	
   922                           
   923                           ;main.c: 151: PORTA = 0;
   924  000120  0E00               	movlw	0
   925  000122  6E80               	movwf	3968,c	;volatile
   926                           
   927                           ;main.c: 153: PORTJ = 0b11111101;
   928  000124  0EFD               	movlw	253
   929  000126  6E88               	movwf	3976,c	;volatile
   930                           
   931                           ;main.c: 154: PORTA = screen_mem_1[screen_read_pointer+1];
   932  000128  0E01               	movlw	1
   933  00012A  2424               	addwf	_screen_read_pointer,w,c
   934  00012C  6E01               	movwf	??_screen_scan& (0+255),c
   935  00012E  0E00               	movlw	0
   936  000130  2025               	addwfc	_screen_read_pointer+1,w,c
   937  000132  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   938  000134  0EF4               	movlw	low _screen_mem_1
   939  000136  2401               	addwf	??_screen_scan,w,c
   940  000138  6ED9               	movwf	fsr2l,c
   941  00013A  0E0C               	movlw	high _screen_mem_1
   942  00013C  2002               	addwfc	??_screen_scan+1,w,c
   943  00013E  6EDA               	movwf	fsr2h,c
   944  000140  50DF               	movf	indf2,w,c
   945  000142  6E80               	movwf	3968,c	;volatile
   946                           
   947                           ;main.c: 155: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
   948  000144  0E2A               	movlw	42
   949  000146                     i2u34_47:
   950  000146  2EE8               	decfsz	wreg,f,c
   951  000148  D7FE               	bra	i2u34_47
   952  00014A  D000               	nop2	
   953                           
   954                           ;main.c: 156: PORTA = 0;
   955  00014C  0E00               	movlw	0
   956  00014E  6E80               	movwf	3968,c	;volatile
   957                           
   958                           ;main.c: 158: PORTJ = 0b11111011;
   959  000150  0EFB               	movlw	251
   960  000152  6E88               	movwf	3976,c	;volatile
   961                           
   962                           ;main.c: 159: PORTA = screen_mem_1[screen_read_pointer+2];
   963  000154  0E02               	movlw	2
   964  000156  2424               	addwf	_screen_read_pointer,w,c
   965  000158  6E01               	movwf	??_screen_scan& (0+255),c
   966  00015A  0E00               	movlw	0
   967  00015C  2025               	addwfc	_screen_read_pointer+1,w,c
   968  00015E  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   969  000160  0EF4               	movlw	low _screen_mem_1
   970  000162  2401               	addwf	??_screen_scan,w,c
   971  000164  6ED9               	movwf	fsr2l,c
   972  000166  0E0C               	movlw	high _screen_mem_1
   973  000168  2002               	addwfc	??_screen_scan+1,w,c
   974  00016A  6EDA               	movwf	fsr2h,c
   975  00016C  50DF               	movf	indf2,w,c
   976  00016E  6E80               	movwf	3968,c	;volatile
   977                           
   978                           ;main.c: 160: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
   979  000170  0E2A               	movlw	42
   980  000172                     i2u35_47:
   981  000172  2EE8               	decfsz	wreg,f,c
   982  000174  D7FE               	bra	i2u35_47
   983  000176  D000               	nop2	
   984                           
   985                           ;main.c: 161: PORTA = 0;
   986  000178  0E00               	movlw	0
   987  00017A  6E80               	movwf	3968,c	;volatile
   988                           
   989                           ;main.c: 163: PORTJ = 0b11110111;
   990  00017C  0EF7               	movlw	247
   991  00017E  6E88               	movwf	3976,c	;volatile
   992                           
   993                           ;main.c: 164: PORTA = screen_mem_1[screen_read_pointer+3];
   994  000180  0E03               	movlw	3
   995  000182  2424               	addwf	_screen_read_pointer,w,c
   996  000184  6E01               	movwf	??_screen_scan& (0+255),c
   997  000186  0E00               	movlw	0
   998  000188  2025               	addwfc	_screen_read_pointer+1,w,c
   999  00018A  6E02               	movwf	(??_screen_scan+1)& (0+255),c
  1000  00018C  0EF4               	movlw	low _screen_mem_1
  1001  00018E  2401               	addwf	??_screen_scan,w,c
  1002  000190  6ED9               	movwf	fsr2l,c
  1003  000192  0E0C               	movlw	high _screen_mem_1
  1004  000194  2002               	addwfc	??_screen_scan+1,w,c
  1005  000196  6EDA               	movwf	fsr2h,c
  1006  000198  50DF               	movf	indf2,w,c
  1007  00019A  6E80               	movwf	3968,c	;volatile
  1008                           
  1009                           ;main.c: 165: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
  1010  00019C  0E2A               	movlw	42
  1011  00019E                     i2u36_47:
  1012  00019E  2EE8               	decfsz	wreg,f,c
  1013  0001A0  D7FE               	bra	i2u36_47
  1014  0001A2  D000               	nop2	
  1015                           
  1016                           ;main.c: 166: PORTA = 0;
  1017  0001A4  0E00               	movlw	0
  1018  0001A6  6E80               	movwf	3968,c	;volatile
  1019                           
  1020                           ;main.c: 168: PORTJ = 0b11101111;
  1021  0001A8  0EEF               	movlw	239
  1022  0001AA  6E88               	movwf	3976,c	;volatile
  1023                           
  1024                           ;main.c: 169: PORTA = screen_mem_1[screen_read_pointer+4];
  1025  0001AC  0E04               	movlw	4
  1026  0001AE  2424               	addwf	_screen_read_pointer,w,c
  1027  0001B0  6E01               	movwf	??_screen_scan& (0+255),c
  1028  0001B2  0E00               	movlw	0
  1029  0001B4  2025               	addwfc	_screen_read_pointer+1,w,c
  1030  0001B6  6E02               	movwf	(??_screen_scan+1)& (0+255),c
  1031  0001B8  0EF4               	movlw	low _screen_mem_1
  1032  0001BA  2401               	addwf	??_screen_scan,w,c
  1033  0001BC  6ED9               	movwf	fsr2l,c
  1034  0001BE  0E0C               	movlw	high _screen_mem_1
  1035  0001C0  2002               	addwfc	??_screen_scan+1,w,c
  1036  0001C2  6EDA               	movwf	fsr2h,c
  1037  0001C4  50DF               	movf	indf2,w,c
  1038  0001C6  6E80               	movwf	3968,c	;volatile
  1039                           
  1040                           ;main.c: 170: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
  1041  0001C8  0E2A               	movlw	42
  1042  0001CA                     i2u37_47:
  1043  0001CA  2EE8               	decfsz	wreg,f,c
  1044  0001CC  D7FE               	bra	i2u37_47
  1045  0001CE  D000               	nop2	
  1046                           
  1047                           ;main.c: 171: PORTA = 0;
  1048  0001D0  0E00               	movlw	0
  1049  0001D2  6E80               	movwf	3968,c	;volatile
  1050                           
  1051                           ;main.c: 173: PORTJ = 0b11011111;
  1052  0001D4  0EDF               	movlw	223
  1053  0001D6  6E88               	movwf	3976,c	;volatile
  1054                           
  1055                           ;main.c: 174: PORTA = screen_mem_1[screen_read_pointer+5];
  1056  0001D8  0E05               	movlw	5
  1057  0001DA  2424               	addwf	_screen_read_pointer,w,c
  1058  0001DC  6E01               	movwf	??_screen_scan& (0+255),c
  1059  0001DE  0E00               	movlw	0
  1060  0001E0  2025               	addwfc	_screen_read_pointer+1,w,c
  1061  0001E2  6E02               	movwf	(??_screen_scan+1)& (0+255),c
  1062  0001E4  0EF4               	movlw	low _screen_mem_1
  1063  0001E6  2401               	addwf	??_screen_scan,w,c
  1064  0001E8  6ED9               	movwf	fsr2l,c
  1065  0001EA  0E0C               	movlw	high _screen_mem_1
  1066  0001EC  2002               	addwfc	??_screen_scan+1,w,c
  1067  0001EE  6EDA               	movwf	fsr2h,c
  1068  0001F0  50DF               	movf	indf2,w,c
  1069  0001F2  6E80               	movwf	3968,c	;volatile
  1070                           
  1071                           ;main.c: 175: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
  1072  0001F4  0E2A               	movlw	42
  1073  0001F6                     i2u38_47:
  1074  0001F6  2EE8               	decfsz	wreg,f,c
  1075  0001F8  D7FE               	bra	i2u38_47
  1076  0001FA  D000               	nop2	
  1077                           
  1078                           ;main.c: 176: PORTA = 0;
  1079  0001FC  0E00               	movlw	0
  1080  0001FE  6E80               	movwf	3968,c	;volatile
  1081                           
  1082                           ;main.c: 178: PORTJ = 0b10111111;
  1083  000200  0EBF               	movlw	191
  1084  000202  6E88               	movwf	3976,c	;volatile
  1085                           
  1086                           ;main.c: 179: PORTA = screen_mem_1[screen_read_pointer+6];
  1087  000204  0E06               	movlw	6
  1088  000206  2424               	addwf	_screen_read_pointer,w,c
  1089  000208  6E01               	movwf	??_screen_scan& (0+255),c
  1090  00020A  0E00               	movlw	0
  1091  00020C  2025               	addwfc	_screen_read_pointer+1,w,c
  1092  00020E  6E02               	movwf	(??_screen_scan+1)& (0+255),c
  1093  000210  0EF4               	movlw	low _screen_mem_1
  1094  000212  2401               	addwf	??_screen_scan,w,c
  1095  000214  6ED9               	movwf	fsr2l,c
  1096  000216  0E0C               	movlw	high _screen_mem_1
  1097  000218  2002               	addwfc	??_screen_scan+1,w,c
  1098  00021A  6EDA               	movwf	fsr2h,c
  1099  00021C  50DF               	movf	indf2,w,c
  1100  00021E  6E80               	movwf	3968,c	;volatile
  1101                           
  1102                           ;main.c: 180: _delay((unsigned long)((10)*((64000000UL)/4000000.0)));
  1103  000220  0E35               	movlw	53
  1104  000222                     i2u39_47:
  1105  000222  2EE8               	decfsz	wreg,f,c
  1106  000224  D7FE               	bra	i2u39_47
  1107  000226  F000               	nop	
  1108                           
  1109                           ;main.c: 181: PORTA = 0;
  1110  000228  0E00               	movlw	0
  1111  00022A  6E80               	movwf	3968,c	;volatile
  1112                           
  1113                           ;main.c: 183: PORTJ = 0b01111111;
  1114  00022C  0E7F               	movlw	127
  1115  00022E  6E88               	movwf	3976,c	;volatile
  1116                           
  1117                           ;main.c: 184: PORTA = screen_mem_1[screen_read_pointer+7];
  1118  000230  0E07               	movlw	7
  1119  000232  2424               	addwf	_screen_read_pointer,w,c
  1120  000234  6E01               	movwf	??_screen_scan& (0+255),c
  1121  000236  0E00               	movlw	0
  1122  000238  2025               	addwfc	_screen_read_pointer+1,w,c
  1123  00023A  6E02               	movwf	(??_screen_scan+1)& (0+255),c
  1124  00023C  0EF4               	movlw	low _screen_mem_1
  1125  00023E  2401               	addwf	??_screen_scan,w,c
  1126  000240  6ED9               	movwf	fsr2l,c
  1127  000242  0E0C               	movlw	high _screen_mem_1
  1128  000244  2002               	addwfc	??_screen_scan+1,w,c
  1129  000246  6EDA               	movwf	fsr2h,c
  1130  000248  50DF               	movf	indf2,w,c
  1131  00024A  6E80               	movwf	3968,c	;volatile
  1132                           
  1133                           ;main.c: 185: _delay((unsigned long)((10)*((64000000UL)/4000000.0)));
  1134  00024C  0E35               	movlw	53
  1135  00024E                     i2u40_47:
  1136  00024E  2EE8               	decfsz	wreg,f,c
  1137  000250  D7FE               	bra	i2u40_47
  1138  000252  F000               	nop	
  1139                           
  1140                           ;main.c: 186: PORTA = 0;
  1141  000254  0E00               	movlw	0
  1142  000256  6E80               	movwf	3968,c	;volatile
  1143                           
  1144                           ;main.c: 188: PORTJ = 0b11111111;
  1145  000258  6888               	setf	3976,c	;volatile
  1146                           
  1147                           ;main.c: 191: column_counter++;
  1148  00025A  2A2B               	incf	_column_counter,f,c
  1149                           
  1150                           ;main.c: 192: if (column_counter > 63) column_counter = 0;
  1151  00025C  0E3F               	movlw	63
  1152  00025E  642B               	cpfsgt	_column_counter,c
  1153  000260  0012               	return	
  1154  000262  0E00               	movlw	0
  1155  000264  6E2B               	movwf	_column_counter,c
  1156  000266  0012               	return	
  1157  000268                     __end_of_screen_scan:
  1158                           	opt stack 0
  1159  0000                     pclatu	equ	0xFFB
  1160                           pclath	equ	0xFFA
  1161                           tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           tblptrl	equ	0xFF6
  1164                           tablat	equ	0xFF5
  1165                           prodh	equ	0xFF4
  1166                           prodl	equ	0xFF3
  1167                           intcon	equ	0xFF2
  1168                           postinc0	equ	0xFEE
  1169                           fsr0h	equ	0xFEA
  1170                           fsr0l	equ	0xFE9
  1171                           wreg	equ	0xFE8
  1172                           postdec1	equ	0xFE5
  1173                           fsr1h	equ	0xFE2
  1174                           fsr1l	equ	0xFE1
  1175                           indf2	equ	0xFDF
  1176                           fsr2h	equ	0xFDA
  1177                           fsr2l	equ	0xFD9
  1178                           status	equ	0xFD8
  1179                           pclatu	equ	0xFFB
  1180                           pclath	equ	0xFFA
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           prodh	equ	0xFF4
  1186                           prodl	equ	0xFF3
  1187                           intcon	equ	0xFF2
  1188                           postinc0	equ	0xFEE
  1189                           fsr0h	equ	0xFEA
  1190                           fsr0l	equ	0xFE9
  1191                           wreg	equ	0xFE8
  1192                           postdec1	equ	0xFE5
  1193                           fsr1h	equ	0xFE2
  1194                           fsr1l	equ	0xFE1
  1195                           indf2	equ	0xFDF
  1196                           fsr2h	equ	0xFDA
  1197                           fsr2l	equ	0xFD9
  1198                           status	equ	0xFD8
  1199                           
  1200                           	psect	rparam
  1201  0000                     pclatu	equ	0xFFB
  1202                           pclath	equ	0xFFA
  1203                           tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           prodh	equ	0xFF4
  1208                           prodl	equ	0xFF3
  1209                           intcon	equ	0xFF2
  1210                           postinc0	equ	0xFEE
  1211                           fsr0h	equ	0xFEA
  1212                           fsr0l	equ	0xFE9
  1213                           wreg	equ	0xFE8
  1214                           postdec1	equ	0xFE5
  1215                           fsr1h	equ	0xFE2
  1216                           fsr1l	equ	0xFE1
  1217                           indf2	equ	0xFDF
  1218                           fsr2h	equ	0xFDA
  1219                           fsr2l	equ	0xFD9
  1220                           status	equ	0xFD8
  1221                           
  1222                           	psect	temp
  1223  00002C                     btemp:
  1224                           	opt stack 0
  1225  00002C                     	ds	1
  1226  0000                     int$flags	set	btemp
  1227  0000                     wtemp6	set	btemp+1
  1228                           pclatu	equ	0xFFB
  1229                           pclath	equ	0xFFA
  1230                           tblptru	equ	0xFF8
  1231                           tblptrh	equ	0xFF7
  1232                           tblptrl	equ	0xFF6
  1233                           tablat	equ	0xFF5
  1234                           prodh	equ	0xFF4
  1235                           prodl	equ	0xFF3
  1236                           intcon	equ	0xFF2
  1237                           postinc0	equ	0xFEE
  1238                           fsr0h	equ	0xFEA
  1239                           fsr0l	equ	0xFE9
  1240                           wreg	equ	0xFE8
  1241                           postdec1	equ	0xFE5
  1242                           fsr1h	equ	0xFE2
  1243                           fsr1l	equ	0xFE1
  1244                           indf2	equ	0xFDF
  1245                           fsr2h	equ	0xFDA
  1246                           fsr2l	equ	0xFD9
  1247                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1034
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_init
    _init->___awdiv

Critical Paths under _isr in COMRAM

    _isr->_screen_scan

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     542
                                             31 COMRAM     2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 3     3      0     542
                                             28 COMRAM     3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 18    18      0       0
                                              2 COMRAM    18    18      0
                        _screen_scan
 ---------------------------------------------------------------------------------
 (4) _screen_scan                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     ___awdiv

 _isr (ROOT)
   _screen_scan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0     400      35       26.8%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      2B       1       45.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B       6        0.0%
DATA                 0      0     42B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 11 16:16:53 2018

                     l97 03B8                       l99 03E6             ___awdiv@sign 001A  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000             __CFG_CP4$OFF 000000  
           __CFG_CP5$OFF 000000             __CFG_CP6$OFF 000000             __CFG_CP7$OFF 000000  
                    l109 02D2                      l280 0338                      l282 0356  
                    l283 034E                      l286 0376                      l287 0380  
                    l279 0328                      l288 038E             __CFG_CPB$OFF 000000  
                    u210 035A                      u308 03F2                      u317 03A8  
                    u254 0306                      u255 0302                      _PR4 000F04  
                    u290 03F0             __CFG_CPD$OFF 000000                      _isr 0008  
                    wreg 000FE8               _TXSTA2bits 000F21                     l1009 02C6  
                   ?_isr 0001                     i2l91 005C                     _main 0398  
                   _init 0268                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 002C  
                   prodh 000FF4                     prodl 000FF3                     start 00A8  
          __CFG_IESO$OFF 000000             ___param_bank 000000                    ??_isr 0003  
          __CFG_RETEN$ON 000000             _BAUDCON2bits 000F20                    ?_main 0001  
                  ?_init 0001          __end_of___awdiv 0398          ___awdiv@divisor 0017  
        ___awdiv@counter 0019                    _PORTA 000F80                    _PORTE 000F84  
                  _PORTH 000F87                    _PORTJ 000F88                    _TRISA 000F92  
                  _TRISE 000F96                    _TRISH 000F99                    _TRISJ 000F9A  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000            __CFG_WRT4$OFF 000000           __CFG_EBRT0$OFF 000000  
          __CFG_WRT5$OFF 000000           __CFG_EBRT1$OFF 000000            __CFG_WRT6$OFF 000000  
         __CFG_EBRT2$OFF 000000            __CFG_WRT7$OFF 000000           __CFG_EBRT3$OFF 000000  
         __CFG_EBRT4$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBRT5$OFF 000000  
         __CFG_EBRT6$OFF 000000           __CFG_EBRT7$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000           _column_counter 002B            __CFG_WRTD$OFF 000000  
         __CFG_EBRTB$OFF 000000                    init@i 001E                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8                    wtemp6 002D  
         __CFG_MCLRE$OFF 000000          __initialization 0402             __end_of_main 0402  
           __end_of_init 0314                   ??_main 0020                   ??_init 001D  
          __activetblptr 000000           __CFG_PLLCFG$ON 000000                   _ANCON0 000F25  
                 _ANCON1 000F24                   _ANCON2 000F23         ___awdiv@dividend 0015  
        __CFG_BBSIZ$BB2K 000000           __CFG_WDTEN$OFF 000000             ?_screen_scan 0001  
                 _RCREG2 000F1D                   _SPBRG2 000F1E                   i2u7_44 00CE  
                 i2u7_45 00CA                   i2u8_44 00FA                   i2u8_45 00F6  
         __CFG_XINST$OFF 000000             _write_screen 0028                ??___awdiv 0019  
         __CFG_STVREN$ON 000000                   clear_0 040A                   clear_1 041C  
       ___awdiv@quotient 001B                   _status 0029                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0422            ___rparam_used 000001           __pcstackCOMRAM 0001  
    _screen_read_pointer 0024                  i2u40_47 024E                  i2u32_47 00D8  
                i2u33_47 011A                  i2u34_47 0146                  i2u35_47 0172  
                i2u36_47 019E                  i2u37_47 01CA                  i2u38_47 01F6  
                i2u39_47 0222                  _SPBRGH2 000F1F     __size_of_screen_scan 01BC  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 0314                  __pcinit 0402                  __ramtop 0F00  
                __ptext0 0398                  __ptext1 0268                  __ptext2 0314  
                __ptext4 00AC             __size_of_isr 00A0                _T4CONbits 000F03  
      __CFG_MSSPMSK$MSK7 000000            _received_byte 002A     end_of_initialization 0422  
                postdec1 000FE5                  postinc0 000FEE                _PORTFbits 000F85  
       __CFG_FOSC$INTIO2 000000                _TRISFbits 000F97                _TRISGbits 000F98  
      __CFG_SOSCSEL$HIGH 000000      start_initialization 0402              __end_of_isr 00A8  
           _page_counter 0026              __pbssBIGRAM 0AF4              __pbssCOMRAM 0022  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008                 ?___awdiv 0015  
          ??_screen_scan 0001                 _PIE5bits 000FB9                 _PIR3bits 000FA4  
               _PIR5bits 000FBA        __CFG_ECCPMX$PORTE 000000     _screen_write_pointer 0022  
             _ANCON2bits 000F23                 __Hrparam 0000      __end_of_screen_scan 0268  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of___awdiv 0084  
           _screen_mem_1 0CF4             _screen_mem_2 0AF4              _read_screen 0027  
          __size_of_main 006A            __size_of_init 00AC      __CFG_RTCOSC$SOSCREF 000000  
               int$flags 002C      __CFG_INTOSCSEL$HIGH 000000              _OSCTUNEbits 000F9B  
             _INTCONbits 000FF2                 intlevel2 0000              _screen_scan 00AC  
             _RCSTA2bits 000F22               _OSCCONbits 000FD3       __CFG_WDTPS$1048576 000000  
             _WDTCONbits 000FD1      __CFG_BORPWR$ZPBORMV 000000  
