

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 09 10:13:56 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F87K90
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F87K90 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _PR4	set	3844
    52  0000                     _T4CONbits	set	3843
    53  0000                     _SPBRGH2	set	3871
    54  0000                     _SPBRG2	set	3870
    55  0000                     _BAUDCON2bits	set	3872
    56  0000                     _TXSTA2bits	set	3873
    57  0000                     _RCSTA2bits	set	3874
    58  0000                     _ANCON2bits	set	3875
    59  0000                     _ANCON2	set	3875
    60  0000                     _ANCON1	set	3876
    61  0000                     _ANCON0	set	3877
    62  0000                     _RCREG2	set	3869
    63  0000                     _INTCONbits	set	4082
    64  0000                     _PIE5bits	set	4025
    65  0000                     _TRISGbits	set	3992
    66  0000                     _TRISJ	set	3994
    67  0000                     _TRISH	set	3993
    68  0000                     _TRISE	set	3990
    69  0000                     _TRISA	set	3986
    70  0000                     _TRISFbits	set	3991
    71  0000                     _WDTCONbits	set	4049
    72  0000                     _OSCTUNEbits	set	3995
    73  0000                     _OSCCONbits	set	4051
    74  0000                     _PORTA	set	3968
    75  0000                     _PORTJ	set	3976
    76  0000                     _PORTE	set	3972
    77  0000                     _PORTH	set	3975
    78  0000                     _PIR3bits	set	4004
    79  0000                     _PORTFbits	set	3973
    80  0000                     _PIR5bits	set	4026
    81                           
    82                           ; #config settings
    83  0000                     
    84                           	psect	cinit
    85  000348                     __pcinit:
    86                           	opt stack 0
    87  000348                     start_initialization:
    88                           	opt stack 0
    89  000348                     __initialization:
    90                           	opt stack 0
    91                           
    92                           ; Clear objects allocated to BIGRAM (1024 bytes)
    93  000348  EE0A  F0F4         	lfsr	0,__pbssBIGRAM
    94  00034C  EE14 F000          	lfsr	1,1024
    95  000350                     clear_0:
    96  000350  6AEE               	clrf	postinc0,c
    97  000352  50E5               	movf	postdec1,w,c
    98  000354  50E1               	movf	fsr1l,w,c
    99  000356  E1FC               	bnz	clear_0
   100  000358  50E2               	movf	fsr1h,w,c
   101  00035A  E1FA               	bnz	clear_0
   102                           
   103                           ; Clear objects allocated to COMRAM (10 bytes)
   104  00035C  EE00  F019         	lfsr	0,__pbssCOMRAM
   105  000360  0E0A               	movlw	10
   106  000362                     clear_1:
   107  000362  6AEE               	clrf	postinc0,c
   108  000364  06E8               	decf	wreg,f,c
   109  000366  E1FD               	bnz	clear_1
   110  000368                     end_of_initialization:
   111                           	opt stack 0
   112  000368                     __end_of__initialization:
   113                           	opt stack 0
   114  000368  9023               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   115  00036A  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   116  00036C  0100               	movlb	0
   117  00036E  EF6F  F001         	goto	_main	;jump to C main() function
   118                           postinc0	equ	0xFEE
   119                           wreg	equ	0xFE8
   120                           postdec1	equ	0xFE5
   121                           fsr1h	equ	0xFE2
   122                           fsr1l	equ	0xFE1
   123                           
   124                           	psect	bssCOMRAM
   125  000019                     __pbssCOMRAM:
   126                           	opt stack 0
   127  000019                     _screen_write_pointer:
   128                           	opt stack 0
   129  000019                     	ds	2
   130  00001B                     _screen_read_pointer:
   131                           	opt stack 0
   132  00001B                     	ds	2
   133  00001D                     _page_counter:
   134                           	opt stack 0
   135  00001D                     	ds	1
   136  00001E                     _read_screen:
   137                           	opt stack 0
   138  00001E                     	ds	1
   139  00001F                     _write_screen:
   140                           	opt stack 0
   141  00001F                     	ds	1
   142  000020                     _status:
   143                           	opt stack 0
   144  000020                     	ds	1
   145  000021                     _received_byte:
   146                           	opt stack 0
   147  000021                     	ds	1
   148  000022                     _column_counter:
   149                           	opt stack 0
   150  000022                     	ds	1
   151                           postinc0	equ	0xFEE
   152                           wreg	equ	0xFE8
   153                           postdec1	equ	0xFE5
   154                           fsr1h	equ	0xFE2
   155                           fsr1l	equ	0xFE1
   156                           
   157                           	psect	bssBIGRAM
   158  000AF4                     __pbssBIGRAM:
   159                           	opt stack 0
   160  000AF4                     _screen_mem_2:
   161                           	opt stack 0
   162  000AF4                     	ds	512
   163  000CF4                     _screen_mem_1:
   164                           	opt stack 0
   165  000CF4                     	ds	512
   166                           postinc0	equ	0xFEE
   167                           wreg	equ	0xFE8
   168                           postdec1	equ	0xFE5
   169                           fsr1h	equ	0xFE2
   170                           fsr1l	equ	0xFE1
   171                           
   172                           	psect	cstackCOMRAM
   173  000001                     __pcstackCOMRAM:
   174                           	opt stack 0
   175  000001                     ??_screen_scan:
   176  000001                     
   177                           ; 1 bytes @ 0x0
   178  000001                     	ds	2
   179  000003                     ??_isr:
   180                           
   181                           ; 1 bytes @ 0x2
   182  000003                     	ds	18
   183  000015                     init@i:
   184                           	opt stack 0
   185                           
   186                           ; 2 bytes @ 0x14
   187  000015                     	ds	2
   188  000017                     ??_main:
   189                           
   190                           ; 1 bytes @ 0x16
   191  000017                     	ds	2
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           postdec1	equ	0xFE5
   195                           fsr1h	equ	0xFE2
   196                           fsr1l	equ	0xFE1
   197                           
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 116 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;		None
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   219 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   220 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   221 ;;Total ram usage:        2 bytes
   222 ;; Hardware stack levels required when called:    3
   223 ;; This function calls:
   224 ;;		_init
   225 ;; This function is called by:
   226 ;;		Startup code after reset
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text0
   231  0002DE                     __ptext0:
   232                           	opt stack 0
   233  0002DE                     _main:
   234                           	opt stack 28
   235                           
   236                           ;main.c: 117: init();
   237                           
   238                           ;incstack = 0
   239  0002DE  EC2F  F001         	call	_init	;wreg free
   240                           
   241                           ;main.c: 119: PORTFbits.RF7 = 1;
   242  0002E2  8E85               	bsf	3973,7,c	;volatile
   243                           
   244                           ;main.c: 120: _delay((unsigned long)((1000)*((64000000UL)/4000.0)));
   245  0002E4  0E52               	movlw	82
   246  0002E6  6E18               	movwf	(??_main+1)& (0+255),c
   247  0002E8  0E2B               	movlw	43
   248  0002EA  6E17               	movwf	??_main& (0+255),c
   249  0002EC  0E00               	movlw	0
   250  0002EE                     u117:
   251  0002EE  2EE8               	decfsz	wreg,f,c
   252  0002F0  D7FE               	bra	u117
   253  0002F2  2E17               	decfsz	??_main& (0+255),f,c
   254  0002F4  D7FC               	bra	u117
   255  0002F6  2E18               	decfsz	(??_main+1)& (0+255),f,c
   256  0002F8  D7FA               	bra	u117
   257  0002FA  D000               	nop2	
   258                           
   259                           ;main.c: 121: PORTFbits.RF7 = 0;
   260  0002FC  9E85               	bcf	3973,7,c	;volatile
   261  0002FE                     
   262                           ;main.c: 124: if (PIR3bits.RC2IF) {
   263  0002FE  AAA4               	btfss	4004,5,c	;volatile
   264  000300  D7FE               	goto	l97
   265                           
   266                           ;main.c: 125: received_byte = RCREG2;
   267  000302  CF1D F021          	movff	3869,_received_byte	;volatile
   268                           
   269                           ;main.c: 126: PIR3bits.RC2IF = 0;
   270  000306  9AA4               	bcf	4004,5,c	;volatile
   271                           
   272                           ;main.c: 128: screen_mem_1[screen_write_pointer] = received_byte;
   273  000308  0EF4               	movlw	low _screen_mem_1
   274  00030A  2419               	addwf	_screen_write_pointer,w,c
   275  00030C  6ED9               	movwf	fsr2l,c
   276  00030E  0E0C               	movlw	high _screen_mem_1
   277  000310  201A               	addwfc	_screen_write_pointer+1,w,c
   278  000312  6EDA               	movwf	fsr2h,c
   279  000314  C021  FFDF         	movff	_received_byte,indf2
   280                           
   281                           ;main.c: 130: screen_write_pointer++;
   282  000318  4A19               	infsnz	_screen_write_pointer,f,c
   283  00031A  2A1A               	incf	_screen_write_pointer+1,f,c
   284                           
   285                           ;main.c: 131: if (screen_write_pointer > 511) screen_write_pointer = 0;
   286  00031C  0E02               	movlw	2
   287  00031E  5C1A               	subwf	_screen_write_pointer+1,w,c
   288  000320  A0D8               	btfss	status,0,c
   289  000322  D004               	goto	l99
   290  000324  0E00               	movlw	0
   291  000326  6E1A               	movwf	_screen_write_pointer+1,c
   292  000328  0E00               	movlw	0
   293  00032A  6E19               	movwf	_screen_write_pointer,c
   294  00032C                     l99:
   295                           
   296                           ;main.c: 133: PORTFbits.RF7 = !PORTFbits.RF7;
   297  00032C  BE85               	btfsc	3973,7,c	;volatile
   298  00032E  D003               	goto	u90
   299  000330  6A17               	clrf	??_main& (0+255),c
   300  000332  2A17               	incf	??_main& (0+255),f,c
   301  000334  D001               	goto	u108
   302  000336                     u90:
   303  000336  6A17               	clrf	??_main& (0+255),c
   304  000338                     u108:
   305  000338  3217               	rrcf	??_main,f,c
   306  00033A  3217               	rrcf	??_main,f,c
   307  00033C  5085               	movf	3973,w,c	;volatile
   308  00033E  1817               	xorwf	??_main,w,c
   309  000340  0B7F               	andlw	-129
   310  000342  1817               	xorwf	??_main,w,c
   311  000344  6E85               	movwf	3973,c	;volatile
   312  000346  D7DB               	goto	l97
   313  000348                     __end_of_main:
   314                           	opt stack 0
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1h	equ	0xFE2
   319                           fsr1l	equ	0xFE1
   320                           indf2	equ	0xFDF
   321                           fsr2h	equ	0xFDA
   322                           fsr2l	equ	0xFD9
   323                           status	equ	0xFD8
   324                           
   325 ;; *************** function _init *****************
   326 ;; Defined at:
   327 ;;		line 193 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  i               2   20[COMRAM] int 
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   342 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   345 ;;Total ram usage:        2 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; Hardware stack levels required when called:    2
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text1
   356  00025E                     __ptext1:
   357                           	opt stack 0
   358  00025E                     _init:
   359                           	opt stack 28
   360                           
   361                           ;main.c: 195: OSCCONbits.IRCF = 0b111;
   362                           
   363                           ;incstack = 0
   364  00025E  88D3               	bsf	4051,4,c	;volatile
   365  000260  8AD3               	bsf	4051,5,c	;volatile
   366  000262  8CD3               	bsf	4051,6,c	;volatile
   367                           
   368                           ;main.c: 196: OSCTUNEbits.PLLEN = 1;
   369  000264  8C9B               	bsf	3995,6,c	;volatile
   370                           
   371                           ;main.c: 199: WDTCONbits.SWDTEN = 0;
   372  000266  90D1               	bcf	4049,0,c	;volatile
   373                           
   374                           ;main.c: 202: ANCON0 = 0x00;
   375  000268  0E00               	movlw	0
   376  00026A  010F               	movlb	15	; () banked
   377  00026C  6F25               	movwf	37,b	;volatile
   378                           
   379                           ;main.c: 203: ANCON1 = 0x00;
   380  00026E  0E00               	movlw	0
   381  000270  6F24               	movwf	36,b	;volatile
   382                           
   383                           ;main.c: 204: ANCON2 = 0x00;
   384  000272  0E00               	movlw	0
   385  000274  6F23               	movwf	35,b	;volatile
   386                           
   387                           ; BSR set to: 15
   388                           ;main.c: 206: TRISFbits.TRISF7 = 0;
   389  000276  9E97               	bcf	3991,7,c	;volatile
   390                           
   391                           ;main.c: 208: TRISA = 0x00;
   392  000278  0E00               	movlw	0
   393  00027A  6E92               	movwf	3986,c	;volatile
   394                           
   395                           ;main.c: 209: TRISE = 0x00;
   396  00027C  0E00               	movlw	0
   397  00027E  6E96               	movwf	3990,c	;volatile
   398                           
   399                           ;main.c: 210: TRISH = 0x00;
   400  000280  0E00               	movlw	0
   401  000282  6E99               	movwf	3993,c	;volatile
   402                           
   403                           ;main.c: 211: TRISJ = 0x00;
   404  000284  0E00               	movlw	0
   405  000286  6E9A               	movwf	3994,c	;volatile
   406                           
   407                           ; BSR set to: 15
   408                           ;main.c: 214: ANCON2bits.ANSEL18 = 0;
   409  000288  9523               	bcf	35,2,b	;volatile
   410                           
   411                           ; BSR set to: 15
   412                           ;main.c: 215: ANCON2bits.ANSEL19 = 0;
   413  00028A  9723               	bcf	35,3,b	;volatile
   414                           
   415                           ; BSR set to: 15
   416                           ;main.c: 216: TRISGbits.TRISG2 = 1;
   417  00028C  8498               	bsf	3992,2,c	;volatile
   418                           
   419                           ; BSR set to: 15
   420                           ;main.c: 217: TRISGbits.TRISG1 = 0;
   421  00028E  9298               	bcf	3992,1,c	;volatile
   422                           
   423                           ; BSR set to: 15
   424                           ;main.c: 218: RCSTA2bits.SPEN2 = 1;
   425  000290  8F22               	bsf	34,7,b	;volatile
   426                           
   427                           ; BSR set to: 15
   428                           ;main.c: 219: RCSTA2bits.CREN2 = 1;
   429  000292  8922               	bsf	34,4,b	;volatile
   430                           
   431                           ; BSR set to: 15
   432                           ;main.c: 220: TXSTA2bits.BRGH2 = 1;
   433  000294  8521               	bsf	33,2,b	;volatile
   434                           
   435                           ; BSR set to: 15
   436                           ;main.c: 221: BAUDCON2bits.BRG162 = 1;
   437  000296  8720               	bsf	32,3,b	;volatile
   438                           
   439                           ;main.c: 222: SPBRG2 = 0x8A;
   440  000298  0E8A               	movlw	138
   441  00029A  6F1E               	movwf	30,b	;volatile
   442                           
   443                           ;main.c: 223: SPBRGH2 = 0x00;
   444  00029C  0E00               	movlw	0
   445  00029E  6F1F               	movwf	31,b	;volatile
   446                           
   447                           ; BSR set to: 15
   448                           ;main.c: 224: PIR3bits.RC2IF = 0;
   449  0002A0  9AA4               	bcf	4004,5,c	;volatile
   450                           
   451                           ;main.c: 227: T4CONbits.T4CKPS = 0b11;
   452  0002A2  0E03               	movlw	3
   453  0002A4  1303               	iorwf	3,f,b	;volatile
   454                           
   455                           ;main.c: 228: PR4 = 156;
   456  0002A6  0E9C               	movlw	156
   457  0002A8  6F04               	movwf	4,b	;volatile
   458                           
   459                           ; BSR set to: 15
   460                           ;main.c: 229: T4CONbits.TMR4ON = 1;
   461  0002AA  8503               	bsf	3,2,b	;volatile
   462                           
   463                           ; BSR set to: 15
   464                           ;main.c: 230: PIR5bits.TMR4IF = 0;
   465  0002AC  90BA               	bcf	4026,0,c	;volatile
   466                           
   467                           ; BSR set to: 15
   468                           ;main.c: 231: PIE5bits.TMR4IE = 1;
   469  0002AE  80B9               	bsf	4025,0,c	;volatile
   470                           
   471                           ; BSR set to: 15
   472                           ;main.c: 234: INTCONbits.PEIE = 1;
   473  0002B0  8CF2               	bsf	intcon,6,c	;volatile
   474                           
   475                           ; BSR set to: 15
   476                           ;main.c: 235: INTCONbits.GIE = 1;
   477  0002B2  8EF2               	bsf	intcon,7,c	;volatile
   478                           
   479                           ;main.c: 237: int i;
   480                           ;main.c: 238: for (i = 0; i < 512; i++) {
   481  0002B4  0E00               	movlw	0
   482  0002B6  6E16               	movwf	init@i+1,c
   483  0002B8  0E00               	movlw	0
   484  0002BA  6E15               	movwf	init@i,c
   485  0002BC                     l845:
   486                           
   487                           ; BSR set to: 15
   488  0002BC  BE16               	btfsc	init@i+1,7,c
   489  0002BE  D004               	goto	l109
   490  0002C0  0E02               	movlw	2
   491  0002C2  5C16               	subwf	init@i+1,w,c
   492  0002C4  B0D8               	btfsc	status,0,c
   493  0002C6  0012               	return	
   494  0002C8                     l109:
   495                           
   496                           ;main.c: 239: screen_mem_1[i] = 0xFF;
   497                           
   498                           ; BSR set to: 15
   499  0002C8  0EF4               	movlw	low _screen_mem_1
   500  0002CA  2415               	addwf	init@i,w,c
   501  0002CC  6ED9               	movwf	fsr2l,c
   502  0002CE  0E0C               	movlw	high _screen_mem_1
   503  0002D0  2016               	addwfc	init@i+1,w,c
   504  0002D2  6EDA               	movwf	fsr2h,c
   505  0002D4  0EFF               	movlw	255
   506  0002D6  6EDF               	movwf	indf2,c
   507  0002D8  4A15               	infsnz	init@i,f,c
   508  0002DA  2A16               	incf	init@i+1,f,c
   509  0002DC  D7EF               	goto	l845
   510  0002DE                     __end_of_init:
   511                           	opt stack 0
   512                           intcon	equ	0xFF2
   513                           postinc0	equ	0xFEE
   514                           wreg	equ	0xFE8
   515                           postdec1	equ	0xFE5
   516                           fsr1h	equ	0xFE2
   517                           fsr1l	equ	0xFE1
   518                           indf2	equ	0xFDF
   519                           fsr2h	equ	0xFDA
   520                           fsr2l	equ	0xFD9
   521                           status	equ	0xFD8
   522                           
   523 ;; *************** function _isr *****************
   524 ;; Defined at:
   525 ;;		line 109 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   541 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   542 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   543 ;;Total ram usage:       18 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    1
   546 ;; This function calls:
   547 ;;		_screen_scan
   548 ;; This function is called by:
   549 ;;		Interrupt level 2
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	intcode
   554  000008                     __pintcode:
   555                           	opt stack 0
   556  000008                     _isr:
   557                           	opt stack 28
   558                           
   559                           ;incstack = 0
   560  000008  8223               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   561  00000A  CFFA F003          	movff	pclath,??_isr
   562  00000E  CFFB F004          	movff	pclatu,??_isr+1
   563  000012  CFE9 F005          	movff	fsr0l,??_isr+2
   564  000016  CFEA F006          	movff	fsr0h,??_isr+3
   565  00001A  CFE1 F007          	movff	fsr1l,??_isr+4
   566  00001E  CFE2 F008          	movff	fsr1h,??_isr+5
   567  000022  CFD9 F009          	movff	fsr2l,??_isr+6
   568  000026  CFDA F00A          	movff	fsr2h,??_isr+7
   569  00002A  CFF3 F00B          	movff	prodl,??_isr+8
   570  00002E  CFF4 F00C          	movff	prodh,??_isr+9
   571  000032  CFF6 F00D          	movff	tblptrl,??_isr+10
   572  000036  CFF7 F00E          	movff	tblptrh,??_isr+11
   573  00003A  CFF8 F00F          	movff	tblptru,??_isr+12
   574  00003E  CFF5 F010          	movff	tablat,??_isr+13
   575  000042  C023  F011         	movff	btemp,??_isr+14
   576  000046  C024  F012         	movff	btemp+1,??_isr+15
   577  00004A  C025  F013         	movff	btemp+2,??_isr+16
   578  00004E  C026  F014         	movff	btemp+3,??_isr+17
   579                           
   580                           ;main.c: 110: if (PIR5bits.TMR4IF) {
   581  000052  A0BA               	btfss	4026,0,c	;volatile
   582  000054  D003               	goto	i2l91
   583                           
   584                           ;main.c: 111: PIR5bits.TMR4IF = 0;
   585  000056  90BA               	bcf	4026,0,c	;volatile
   586                           
   587                           ;main.c: 112: screen_scan();
   588  000058  EC56  F000         	call	_screen_scan	;wreg free
   589  00005C                     i2l91:
   590  00005C  C014  F026         	movff	??_isr+17,btemp+3
   591  000060  C013  F025         	movff	??_isr+16,btemp+2
   592  000064  C012  F024         	movff	??_isr+15,btemp+1
   593  000068  C011  F023         	movff	??_isr+14,btemp
   594  00006C  C010  FFF5         	movff	??_isr+13,tablat
   595  000070  C00F  FFF8         	movff	??_isr+12,tblptru
   596  000074  C00E  FFF7         	movff	??_isr+11,tblptrh
   597  000078  C00D  FFF6         	movff	??_isr+10,tblptrl
   598  00007C  C00C  FFF4         	movff	??_isr+9,prodh
   599  000080  C00B  FFF3         	movff	??_isr+8,prodl
   600  000084  C00A  FFDA         	movff	??_isr+7,fsr2h
   601  000088  C009  FFD9         	movff	??_isr+6,fsr2l
   602  00008C  C008  FFE2         	movff	??_isr+5,fsr1h
   603  000090  C007  FFE1         	movff	??_isr+4,fsr1l
   604  000094  C006  FFEA         	movff	??_isr+3,fsr0h
   605  000098  C005  FFE9         	movff	??_isr+2,fsr0l
   606  00009C  C004  FFFB         	movff	??_isr+1,pclatu
   607  0000A0  C003  FFFA         	movff	??_isr,pclath
   608  0000A4  9223               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   609  0000A6  0011               	retfie		f
   610  0000A8                     __end_of_isr:
   611                           	opt stack 0
   612                           pclatu	equ	0xFFB
   613                           pclath	equ	0xFFA
   614                           tblptru	equ	0xFF8
   615                           tblptrh	equ	0xFF7
   616                           tblptrl	equ	0xFF6
   617                           tablat	equ	0xFF5
   618                           prodh	equ	0xFF4
   619                           prodl	equ	0xFF3
   620                           intcon	equ	0xFF2
   621                           postinc0	equ	0xFEE
   622                           fsr0h	equ	0xFEA
   623                           fsr0l	equ	0xFE9
   624                           wreg	equ	0xFE8
   625                           postdec1	equ	0xFE5
   626                           fsr1h	equ	0xFE2
   627                           fsr1l	equ	0xFE1
   628                           indf2	equ	0xFDF
   629                           fsr2h	equ	0xFDA
   630                           fsr2l	equ	0xFD9
   631                           status	equ	0xFD8
   632                           
   633 ;; *************** function _screen_scan *****************
   634 ;; Defined at:
   635 ;;		line 138 in file "main.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   652 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   653 ;;Total ram usage:        2 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_isr
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           	psect	text3
   663  0000AC                     __ptext3:
   664                           	opt stack 0
   665  0000AC                     _screen_scan:
   666                           	opt stack 28
   667                           
   668                           ;main.c: 140: screen_read_pointer = (column_counter*8);
   669                           
   670                           ;incstack = 0
   671  0000AC  5022               	movf	_column_counter,w,c
   672  0000AE  0D08               	mullw	8
   673  0000B0  CFF3 F01B          	movff	prodl,_screen_read_pointer
   674  0000B4  CFF4 F01C          	movff	prodh,_screen_read_pointer+1
   675                           
   676                           ;main.c: 142: PORTH = ~(0b1 << (column_counter>>3));
   677  0000B8  C022  F001         	movff	_column_counter,??_screen_scan
   678  0000BC  90D8               	bcf	status,0,c
   679  0000BE  3201               	rrcf	??_screen_scan,f,c
   680  0000C0  90D8               	bcf	status,0,c
   681  0000C2  3201               	rrcf	??_screen_scan,f,c
   682  0000C4  90D8               	bcf	status,0,c
   683  0000C6  3201               	rrcf	??_screen_scan,f,c
   684  0000C8  0E01               	movlw	1
   685  0000CA  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   686  0000CC  2A01               	incf	??_screen_scan,f,c
   687  0000CE  D002               	goto	i2u1_44
   688  0000D0                     i2u1_45:
   689  0000D0  90D8               	bcf	status,0,c
   690  0000D2  3602               	rlcf	??_screen_scan+1,f,c
   691  0000D4                     i2u1_44:
   692  0000D4  2E01               	decfsz	??_screen_scan,f,c
   693  0000D6  D7FC               	goto	i2u1_45
   694  0000D8  5002               	movf	??_screen_scan+1,w,c
   695  0000DA  0AFF               	xorlw	255
   696  0000DC  6E87               	movwf	3975,c	;volatile
   697                           
   698                           ;main.c: 143: PORTE = 0b1 << (column_counter%8);
   699  0000DE  C022  F001         	movff	_column_counter,??_screen_scan
   700  0000E2  0E07               	movlw	7
   701  0000E4  1601               	andwf	??_screen_scan,f,c
   702  0000E6  0E01               	movlw	1
   703  0000E8  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   704  0000EA  2A01               	incf	??_screen_scan,f,c
   705  0000EC  D002               	goto	i2u2_44
   706  0000EE                     i2u2_45:
   707  0000EE  90D8               	bcf	status,0,c
   708  0000F0  3602               	rlcf	??_screen_scan+1,f,c
   709  0000F2                     i2u2_44:
   710  0000F2  2E01               	decfsz	??_screen_scan,f,c
   711  0000F4  D7FC               	goto	i2u2_45
   712  0000F6  5002               	movf	??_screen_scan+1,w,c
   713  0000F8  6E84               	movwf	3972,c	;volatile
   714                           
   715                           ;main.c: 145: PORTJ = 0b11111110;
   716  0000FA  0EFE               	movlw	254
   717  0000FC  6E88               	movwf	3976,c	;volatile
   718                           
   719                           ;main.c: 146: PORTA = screen_mem_1[screen_read_pointer+0];
   720  0000FE  0EF4               	movlw	low _screen_mem_1
   721  000100  241B               	addwf	_screen_read_pointer,w,c
   722  000102  6ED9               	movwf	fsr2l,c
   723  000104  0E0C               	movlw	high _screen_mem_1
   724  000106  201C               	addwfc	_screen_read_pointer+1,w,c
   725  000108  6EDA               	movwf	fsr2h,c
   726  00010A  50DF               	movf	indf2,w,c
   727  00010C  6E80               	movwf	3968,c	;volatile
   728                           
   729                           ;main.c: 147: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
   730  00010E  0E2A               	movlw	42
   731  000110                     i2u12_47:
   732  000110  2EE8               	decfsz	wreg,f,c
   733  000112  D7FE               	bra	i2u12_47
   734  000114  D000               	nop2	
   735                           
   736                           ;main.c: 148: PORTA = 0;
   737  000116  0E00               	movlw	0
   738  000118  6E80               	movwf	3968,c	;volatile
   739                           
   740                           ;main.c: 150: PORTJ = 0b11111101;
   741  00011A  0EFD               	movlw	253
   742  00011C  6E88               	movwf	3976,c	;volatile
   743                           
   744                           ;main.c: 151: PORTA = screen_mem_1[screen_read_pointer+1];
   745  00011E  0E01               	movlw	1
   746  000120  241B               	addwf	_screen_read_pointer,w,c
   747  000122  6E01               	movwf	??_screen_scan& (0+255),c
   748  000124  0E00               	movlw	0
   749  000126  201C               	addwfc	_screen_read_pointer+1,w,c
   750  000128  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   751  00012A  0EF4               	movlw	low _screen_mem_1
   752  00012C  2401               	addwf	??_screen_scan,w,c
   753  00012E  6ED9               	movwf	fsr2l,c
   754  000130  0E0C               	movlw	high _screen_mem_1
   755  000132  2002               	addwfc	??_screen_scan+1,w,c
   756  000134  6EDA               	movwf	fsr2h,c
   757  000136  50DF               	movf	indf2,w,c
   758  000138  6E80               	movwf	3968,c	;volatile
   759                           
   760                           ;main.c: 152: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
   761  00013A  0E2A               	movlw	42
   762  00013C                     i2u13_47:
   763  00013C  2EE8               	decfsz	wreg,f,c
   764  00013E  D7FE               	bra	i2u13_47
   765  000140  D000               	nop2	
   766                           
   767                           ;main.c: 153: PORTA = 0;
   768  000142  0E00               	movlw	0
   769  000144  6E80               	movwf	3968,c	;volatile
   770                           
   771                           ;main.c: 155: PORTJ = 0b11111011;
   772  000146  0EFB               	movlw	251
   773  000148  6E88               	movwf	3976,c	;volatile
   774                           
   775                           ;main.c: 156: PORTA = screen_mem_1[screen_read_pointer+2];
   776  00014A  0E02               	movlw	2
   777  00014C  241B               	addwf	_screen_read_pointer,w,c
   778  00014E  6E01               	movwf	??_screen_scan& (0+255),c
   779  000150  0E00               	movlw	0
   780  000152  201C               	addwfc	_screen_read_pointer+1,w,c
   781  000154  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   782  000156  0EF4               	movlw	low _screen_mem_1
   783  000158  2401               	addwf	??_screen_scan,w,c
   784  00015A  6ED9               	movwf	fsr2l,c
   785  00015C  0E0C               	movlw	high _screen_mem_1
   786  00015E  2002               	addwfc	??_screen_scan+1,w,c
   787  000160  6EDA               	movwf	fsr2h,c
   788  000162  50DF               	movf	indf2,w,c
   789  000164  6E80               	movwf	3968,c	;volatile
   790                           
   791                           ;main.c: 157: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
   792  000166  0E2A               	movlw	42
   793  000168                     i2u14_47:
   794  000168  2EE8               	decfsz	wreg,f,c
   795  00016A  D7FE               	bra	i2u14_47
   796  00016C  D000               	nop2	
   797                           
   798                           ;main.c: 158: PORTA = 0;
   799  00016E  0E00               	movlw	0
   800  000170  6E80               	movwf	3968,c	;volatile
   801                           
   802                           ;main.c: 160: PORTJ = 0b11110111;
   803  000172  0EF7               	movlw	247
   804  000174  6E88               	movwf	3976,c	;volatile
   805                           
   806                           ;main.c: 161: PORTA = screen_mem_1[screen_read_pointer+3];
   807  000176  0E03               	movlw	3
   808  000178  241B               	addwf	_screen_read_pointer,w,c
   809  00017A  6E01               	movwf	??_screen_scan& (0+255),c
   810  00017C  0E00               	movlw	0
   811  00017E  201C               	addwfc	_screen_read_pointer+1,w,c
   812  000180  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   813  000182  0EF4               	movlw	low _screen_mem_1
   814  000184  2401               	addwf	??_screen_scan,w,c
   815  000186  6ED9               	movwf	fsr2l,c
   816  000188  0E0C               	movlw	high _screen_mem_1
   817  00018A  2002               	addwfc	??_screen_scan+1,w,c
   818  00018C  6EDA               	movwf	fsr2h,c
   819  00018E  50DF               	movf	indf2,w,c
   820  000190  6E80               	movwf	3968,c	;volatile
   821                           
   822                           ;main.c: 162: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
   823  000192  0E2A               	movlw	42
   824  000194                     i2u15_47:
   825  000194  2EE8               	decfsz	wreg,f,c
   826  000196  D7FE               	bra	i2u15_47
   827  000198  D000               	nop2	
   828                           
   829                           ;main.c: 163: PORTA = 0;
   830  00019A  0E00               	movlw	0
   831  00019C  6E80               	movwf	3968,c	;volatile
   832                           
   833                           ;main.c: 165: PORTJ = 0b11101111;
   834  00019E  0EEF               	movlw	239
   835  0001A0  6E88               	movwf	3976,c	;volatile
   836                           
   837                           ;main.c: 166: PORTA = screen_mem_1[screen_read_pointer+4];
   838  0001A2  0E04               	movlw	4
   839  0001A4  241B               	addwf	_screen_read_pointer,w,c
   840  0001A6  6E01               	movwf	??_screen_scan& (0+255),c
   841  0001A8  0E00               	movlw	0
   842  0001AA  201C               	addwfc	_screen_read_pointer+1,w,c
   843  0001AC  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   844  0001AE  0EF4               	movlw	low _screen_mem_1
   845  0001B0  2401               	addwf	??_screen_scan,w,c
   846  0001B2  6ED9               	movwf	fsr2l,c
   847  0001B4  0E0C               	movlw	high _screen_mem_1
   848  0001B6  2002               	addwfc	??_screen_scan+1,w,c
   849  0001B8  6EDA               	movwf	fsr2h,c
   850  0001BA  50DF               	movf	indf2,w,c
   851  0001BC  6E80               	movwf	3968,c	;volatile
   852                           
   853                           ;main.c: 167: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
   854  0001BE  0E2A               	movlw	42
   855  0001C0                     i2u16_47:
   856  0001C0  2EE8               	decfsz	wreg,f,c
   857  0001C2  D7FE               	bra	i2u16_47
   858  0001C4  D000               	nop2	
   859                           
   860                           ;main.c: 168: PORTA = 0;
   861  0001C6  0E00               	movlw	0
   862  0001C8  6E80               	movwf	3968,c	;volatile
   863                           
   864                           ;main.c: 170: PORTJ = 0b11011111;
   865  0001CA  0EDF               	movlw	223
   866  0001CC  6E88               	movwf	3976,c	;volatile
   867                           
   868                           ;main.c: 171: PORTA = screen_mem_1[screen_read_pointer+5];
   869  0001CE  0E05               	movlw	5
   870  0001D0  241B               	addwf	_screen_read_pointer,w,c
   871  0001D2  6E01               	movwf	??_screen_scan& (0+255),c
   872  0001D4  0E00               	movlw	0
   873  0001D6  201C               	addwfc	_screen_read_pointer+1,w,c
   874  0001D8  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   875  0001DA  0EF4               	movlw	low _screen_mem_1
   876  0001DC  2401               	addwf	??_screen_scan,w,c
   877  0001DE  6ED9               	movwf	fsr2l,c
   878  0001E0  0E0C               	movlw	high _screen_mem_1
   879  0001E2  2002               	addwfc	??_screen_scan+1,w,c
   880  0001E4  6EDA               	movwf	fsr2h,c
   881  0001E6  50DF               	movf	indf2,w,c
   882  0001E8  6E80               	movwf	3968,c	;volatile
   883                           
   884                           ;main.c: 172: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
   885  0001EA  0E2A               	movlw	42
   886  0001EC                     i2u17_47:
   887  0001EC  2EE8               	decfsz	wreg,f,c
   888  0001EE  D7FE               	bra	i2u17_47
   889  0001F0  D000               	nop2	
   890                           
   891                           ;main.c: 173: PORTA = 0;
   892  0001F2  0E00               	movlw	0
   893  0001F4  6E80               	movwf	3968,c	;volatile
   894                           
   895                           ;main.c: 175: PORTJ = 0b10111111;
   896  0001F6  0EBF               	movlw	191
   897  0001F8  6E88               	movwf	3976,c	;volatile
   898                           
   899                           ;main.c: 176: PORTA = screen_mem_1[screen_read_pointer+6];
   900  0001FA  0E06               	movlw	6
   901  0001FC  241B               	addwf	_screen_read_pointer,w,c
   902  0001FE  6E01               	movwf	??_screen_scan& (0+255),c
   903  000200  0E00               	movlw	0
   904  000202  201C               	addwfc	_screen_read_pointer+1,w,c
   905  000204  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   906  000206  0EF4               	movlw	low _screen_mem_1
   907  000208  2401               	addwf	??_screen_scan,w,c
   908  00020A  6ED9               	movwf	fsr2l,c
   909  00020C  0E0C               	movlw	high _screen_mem_1
   910  00020E  2002               	addwfc	??_screen_scan+1,w,c
   911  000210  6EDA               	movwf	fsr2h,c
   912  000212  50DF               	movf	indf2,w,c
   913  000214  6E80               	movwf	3968,c	;volatile
   914                           
   915                           ;main.c: 177: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
   916  000216  0E2A               	movlw	42
   917  000218                     i2u18_47:
   918  000218  2EE8               	decfsz	wreg,f,c
   919  00021A  D7FE               	bra	i2u18_47
   920  00021C  D000               	nop2	
   921                           
   922                           ;main.c: 178: PORTA = 0;
   923  00021E  0E00               	movlw	0
   924  000220  6E80               	movwf	3968,c	;volatile
   925                           
   926                           ;main.c: 180: PORTJ = 0b01111111;
   927  000222  0E7F               	movlw	127
   928  000224  6E88               	movwf	3976,c	;volatile
   929                           
   930                           ;main.c: 181: PORTA = screen_mem_1[screen_read_pointer+7];
   931  000226  0E07               	movlw	7
   932  000228  241B               	addwf	_screen_read_pointer,w,c
   933  00022A  6E01               	movwf	??_screen_scan& (0+255),c
   934  00022C  0E00               	movlw	0
   935  00022E  201C               	addwfc	_screen_read_pointer+1,w,c
   936  000230  6E02               	movwf	(??_screen_scan+1)& (0+255),c
   937  000232  0EF4               	movlw	low _screen_mem_1
   938  000234  2401               	addwf	??_screen_scan,w,c
   939  000236  6ED9               	movwf	fsr2l,c
   940  000238  0E0C               	movlw	high _screen_mem_1
   941  00023A  2002               	addwfc	??_screen_scan+1,w,c
   942  00023C  6EDA               	movwf	fsr2h,c
   943  00023E  50DF               	movf	indf2,w,c
   944  000240  6E80               	movwf	3968,c	;volatile
   945                           
   946                           ;main.c: 182: _delay((unsigned long)((8)*((64000000UL)/4000000.0)));
   947  000242  0E2A               	movlw	42
   948  000244                     i2u19_47:
   949  000244  2EE8               	decfsz	wreg,f,c
   950  000246  D7FE               	bra	i2u19_47
   951  000248  D000               	nop2	
   952                           
   953                           ;main.c: 183: PORTA = 0;
   954  00024A  0E00               	movlw	0
   955  00024C  6E80               	movwf	3968,c	;volatile
   956                           
   957                           ;main.c: 185: PORTJ = 0b11111111;
   958  00024E  6888               	setf	3976,c	;volatile
   959                           
   960                           ;main.c: 188: column_counter++;
   961  000250  2A22               	incf	_column_counter,f,c
   962                           
   963                           ;main.c: 189: if (column_counter > 63) column_counter = 0;
   964  000252  0E3F               	movlw	63
   965  000254  6422               	cpfsgt	_column_counter,c
   966  000256  0012               	return	
   967  000258  0E00               	movlw	0
   968  00025A  6E22               	movwf	_column_counter,c
   969  00025C  0012               	return	
   970  00025E                     __end_of_screen_scan:
   971                           	opt stack 0
   972  0000                     pclatu	equ	0xFFB
   973                           pclath	equ	0xFFA
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           prodh	equ	0xFF4
   979                           prodl	equ	0xFF3
   980                           intcon	equ	0xFF2
   981                           postinc0	equ	0xFEE
   982                           fsr0h	equ	0xFEA
   983                           fsr0l	equ	0xFE9
   984                           wreg	equ	0xFE8
   985                           postdec1	equ	0xFE5
   986                           fsr1h	equ	0xFE2
   987                           fsr1l	equ	0xFE1
   988                           indf2	equ	0xFDF
   989                           fsr2h	equ	0xFDA
   990                           fsr2l	equ	0xFD9
   991                           status	equ	0xFD8
   992                           pclatu	equ	0xFFB
   993                           pclath	equ	0xFFA
   994                           tblptru	equ	0xFF8
   995                           tblptrh	equ	0xFF7
   996                           tblptrl	equ	0xFF6
   997                           tablat	equ	0xFF5
   998                           prodh	equ	0xFF4
   999                           prodl	equ	0xFF3
  1000                           intcon	equ	0xFF2
  1001                           postinc0	equ	0xFEE
  1002                           fsr0h	equ	0xFEA
  1003                           fsr0l	equ	0xFE9
  1004                           wreg	equ	0xFE8
  1005                           postdec1	equ	0xFE5
  1006                           fsr1h	equ	0xFE2
  1007                           fsr1l	equ	0xFE1
  1008                           indf2	equ	0xFDF
  1009                           fsr2h	equ	0xFDA
  1010                           fsr2l	equ	0xFD9
  1011                           status	equ	0xFD8
  1012                           
  1013                           	psect	rparam
  1014  0000                     pclatu	equ	0xFFB
  1015                           pclath	equ	0xFFA
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           prodh	equ	0xFF4
  1021                           prodl	equ	0xFF3
  1022                           intcon	equ	0xFF2
  1023                           postinc0	equ	0xFEE
  1024                           fsr0h	equ	0xFEA
  1025                           fsr0l	equ	0xFE9
  1026                           wreg	equ	0xFE8
  1027                           postdec1	equ	0xFE5
  1028                           fsr1h	equ	0xFE2
  1029                           fsr1l	equ	0xFE1
  1030                           indf2	equ	0xFDF
  1031                           fsr2h	equ	0xFDA
  1032                           fsr2l	equ	0xFD9
  1033                           status	equ	0xFD8
  1034                           
  1035                           	psect	temp
  1036  000023                     btemp:
  1037                           	opt stack 0
  1038  000023                     	ds	1
  1039  0000                     int$flags	set	btemp
  1040  0000                     wtemp6	set	btemp+1
  1041                           pclatu	equ	0xFFB
  1042                           pclath	equ	0xFFA
  1043                           tblptru	equ	0xFF8
  1044                           tblptrh	equ	0xFF7
  1045                           tblptrl	equ	0xFF6
  1046                           tablat	equ	0xFF5
  1047                           prodh	equ	0xFF4
  1048                           prodl	equ	0xFF3
  1049                           intcon	equ	0xFF2
  1050                           postinc0	equ	0xFEE
  1051                           fsr0h	equ	0xFEA
  1052                           fsr0l	equ	0xFE9
  1053                           wreg	equ	0xFE8
  1054                           postdec1	equ	0xFE5
  1055                           fsr1h	equ	0xFE2
  1056                           fsr1l	equ	0xFE1
  1057                           indf2	equ	0xFDF
  1058                           fsr2h	equ	0xFDA
  1059                           fsr2l	equ	0xFD9
  1060                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1034
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_init

Critical Paths under _isr in COMRAM

    _isr->_screen_scan

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      45
                                             22 COMRAM     2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      45
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 18    18      0       0
                                              2 COMRAM    18    18      0
                        _screen_scan
 ---------------------------------------------------------------------------------
 (3) _screen_scan                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _isr (ROOT)
   _screen_scan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0     400      35       26.8%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      22       1       36.2%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22       6        0.0%
DATA                 0      0     422       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 09 10:13:56 2018

                     l97 02FE                       l99 032C                       u90 0336  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000             __CFG_CP4$OFF 000000  
           __CFG_CP5$OFF 000000             __CFG_CP6$OFF 000000             __CFG_CP7$OFF 000000  
                    l109 02C8                      l845 02BC             __CFG_CPB$OFF 000000  
                    u108 0338                      u117 02EE                      _PR4 000F04  
           __CFG_CPD$OFF 000000                      _isr 0008                      wreg 000FE8  
             _TXSTA2bits 000F21                     ?_isr 0001                     i2l91 005C  
                   _main 02DE                     _init 025E                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0023                     prodh 000FF4                     prodl 000FF3  
                   start 00A8            __CFG_IESO$OFF 000000             ___param_bank 000000  
                  ??_isr 0003            __CFG_RETEN$ON 000000             _BAUDCON2bits 000F20  
                  ?_main 0001                    ?_init 0001                    _PORTA 000F80  
                  _PORTE 000F84                    _PORTH 000F87                    _PORTJ 000F88  
                  _TRISA 000F92                    _TRISE 000F96                    _TRISH 000F99  
                  _TRISJ 000F9A            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000            __CFG_WRT4$OFF 000000  
         __CFG_EBRT0$OFF 000000            __CFG_WRT5$OFF 000000           __CFG_EBRT1$OFF 000000  
          __CFG_WRT6$OFF 000000           __CFG_EBRT2$OFF 000000            __CFG_WRT7$OFF 000000  
         __CFG_EBRT3$OFF 000000           __CFG_EBRT4$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBRT5$OFF 000000           __CFG_EBRT6$OFF 000000           __CFG_EBRT7$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000           _column_counter 0022  
          __CFG_WRTD$OFF 000000           __CFG_EBRTB$OFF 000000                    init@i 0015  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
                  wtemp6 0024           __CFG_MCLRE$OFF 000000          __initialization 0348  
           __end_of_main 0348             __end_of_init 02DE                   ??_main 0017  
                 ??_init 0015            __activetblptr 000000           __CFG_PLLCFG$ON 000000  
                 _ANCON0 000F25                   _ANCON1 000F24                   _ANCON2 000F23  
        __CFG_BBSIZ$BB2K 000000           __CFG_WDTEN$OFF 000000             ?_screen_scan 0001  
                 _RCREG2 000F1D                   _SPBRG2 000F1E                   i2u1_44 00D4  
                 i2u1_45 00D0                   i2u2_44 00F2                   i2u2_45 00EE  
         __CFG_XINST$OFF 000000             _write_screen 001F           __CFG_STVREN$ON 000000  
                 clear_0 0350                   clear_1 0362                   _status 0020  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0368            ___rparam_used 000001  
         __pcstackCOMRAM 0001      _screen_read_pointer 001B                  i2u12_47 0110  
                i2u13_47 013C                  i2u14_47 0168                  i2u15_47 0194  
                i2u16_47 01C0                  i2u17_47 01EC                  i2u18_47 0218  
                i2u19_47 0244                  _SPBRGH2 000F1F     __size_of_screen_scan 01B2  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0348                  __ramtop 0F00                  __ptext0 02DE  
                __ptext1 025E                  __ptext3 00AC             __size_of_isr 00A0  
              _T4CONbits 000F03        __CFG_MSSPMSK$MSK7 000000            _received_byte 0021  
   end_of_initialization 0368                  postdec1 000FE5                  postinc0 000FEE  
              _PORTFbits 000F85         __CFG_FOSC$INTIO2 000000                _TRISFbits 000F97  
              _TRISGbits 000F98        __CFG_SOSCSEL$HIGH 000000      start_initialization 0348  
            __end_of_isr 00A8             _page_counter 001D              __pbssBIGRAM 0AF4  
            __pbssCOMRAM 0019        __CFG_CCP2MX$PORTC 000000                __pintcode 0008  
          ??_screen_scan 0001                 _PIE5bits 000FB9                 _PIR3bits 000FA4  
               _PIR5bits 000FBA        __CFG_ECCPMX$PORTE 000000     _screen_write_pointer 0019  
             _ANCON2bits 000F23                 __Hrparam 0000      __end_of_screen_scan 025E  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000             _screen_mem_1 0CF4  
           _screen_mem_2 0AF4              _read_screen 001E            __size_of_main 006A  
          __size_of_init 0080      __CFG_RTCOSC$SOSCREF 000000                 int$flags 0023  
    __CFG_INTOSCSEL$HIGH 000000              _OSCTUNEbits 000F9B               _INTCONbits 000FF2  
               intlevel2 0000              _screen_scan 00AC               _RCSTA2bits 000F22  
             _OSCCONbits 000FD3       __CFG_WDTPS$1048576 000000               _WDTCONbits 000FD1  
    __CFG_BORPWR$ZPBORMV 000000  
